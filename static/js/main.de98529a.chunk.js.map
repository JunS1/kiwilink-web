{"version":3,"sources":["logo.svg","pages/Main/assets/kiwi.png","services/history.js","Firebase.js","pages/SignIn/index.js","pages/Register/index.js","pages/Main/components/Profile.js","Fire.js","pages/Main/components/ForYou.js","pages/Main/components/Explore.js","pages/Main/components/CreateGroup.js","pages/Main/components/Message.js","pages/Main/components/Request.js","pages/Main/index.js","routes/index.js","App.js","serviceWorker.js","index.js","pages/Main/assets/star.png"],"names":["module","exports","history","createBrowserHistory","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SignIn","props","login","auth","signInWithEmailAndPassword","state","email","password","then","res","push","window","location","reload","catch","err","setState","error","message","className","this","length","onSubmit","handleSubmit","type","placeholder","value","onChange","event","target","onClick","React","Component","default_image","Register","first_name","last_name","register","createUserWithEmailAndPassword","creds","database","ref","child","user","uid","set","bio","image","console","log","lassName","Profile","saveBio","newBio","update","editBio","saveCourses","courses","newCourses","editCourses","saveMajors","majors","newMajors","editMajors","filter","items","options","createFilterOptions","labelKey","valueKey","src","alt","multi","filterOptions","map","item","name","split","id","course","key","major","send","messages","room","forEach","text","timestamp","ServerValue","TIMESTAMP","sent","getRoom","parse","a","val","system","_id","createdAt","Date","get","callback","on","snapshot","getReadReceipts","unsubscribeReadReceipts","off","getGroupChatListener","add","remove","unsubscribeGroupChatListener","getNonRelatedUsers","allUsers","currRelated","nonRelatedUsers","undefined","result","relatedUser","getMatches","users","prefEnable","once","userData","jsUserData","currFriends","friends","currRequested","requestedFriends","currRequesting","requestingFriends","Object","assign","curr_user_majors","Set","curr_user_courses","keys","relevantUser","all_courses","current_majors","has","concat","all_majors","classes","getFriendListener","unsubscribeFriendListener","getRequestListener","add_callback","remove_callback","unsubscribedRequestListener","getAllReqUsers","dataSnapShot","allUserData","reqUser","major_names","allMajors","course_names","getReqUsers","full_name","space_pos","search","substring","firstName","replace","date","difference_in_days","getTime","hours","getHours","minutes","getMinutes","amPm","toString","arr","texts","group_name","snap","last_seen","currentUser","displayName","ForYou","renderClasses","i","limit","requestFriend","idx","currUser","Fire","warn","newUsers","splice","renderMatches","obj","require","Explore","CreateGroup","selectedUsers","group_chat_name","confirmGroup","active","cancel","js_data","Message","getRooms","room_id","temp_rooms","rooms","temp_room_detail","room_details","data_json","url","recent","getListeners","temp","temp_ids","index","indexOf","snapShot","newUserDetails","user_details","e","friend","newRooms","picture","GiftedChat","append","sort","b","members","unsubscribeListeners","compare","first","second","cancelCreateGroup","create","refreshing","most_recent","isLoading","focused","currentRoom","showUserAvatar","avatar","onSend","style","styles","convoList","values","displayRecent","container","channelList","renderChatRooms","chat","renderChat","settings","renderSetting","flex","display","flexDirection","height","borderWidth","borderColor","borderRightStyle","borderLeftStyle","Request","removeRequest","reqUsers","newReqUsers","confirmRequest","renderRequests","userSnapShot","some","getReqUser","Main","profile","for_you","explore","request","goToProfile","goToForYou","goToExplore","goToFriendRequest","goToMessage","logOut","signOut","onAuthStateChanged","logo","Routes","path","component","isPrivate","exact","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,kC,8LCA3CD,EAAOC,QAAU,IAA0B,kC,uKCI5BC,EAFCC,c,iBCUhBC,gBAVa,CACTC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKIP,QCVMQ,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,MAAQ,WACJV,EAASW,OAAOC,2BAA2B,EAAKC,MAAMC,MAAO,EAAKD,MAAME,UAAUC,MAAK,SAAAC,GACnF,EAAKR,MAAMX,QAAQoB,KAAK,cACxBC,OAAOC,SAASC,YACjBC,OAAM,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAACC,MAAOF,EAAIG,cAZ1C,EAAKb,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVU,MAAO,IALI,E,qDAiBT,IAAD,OACL,OACI,yBAAKE,UAAU,mBACX,kDACCC,KAAKf,MAAMY,MAAMI,OAAS,GAAK,2BAAID,KAAKf,MAAMY,OAC/C,0BAAME,UAAU,cAAcG,SAAUF,KAAKG,cACzC,+BAEI,2BAAOC,KAAK,QACRC,YAAY,QACZC,MAAON,KAAKf,MAAMC,MAClBqB,SAAU,SAAAC,GACN,EAAKZ,SAAS,CAACV,MAAOsB,EAAMC,OAAOH,YAI/C,+BAEI,2BACID,YAAY,WACZD,KAAK,WACLE,MAAON,KAAKf,MAAME,SAClBoB,SAAU,SAAAC,GACN,EAAKZ,SAAS,CAACT,SAAUqB,EAAMC,OAAOH,aAKtD,yBAAKP,UAAU,yBACX,4BACIW,QAASV,KAAKlB,MACdiB,UAAU,gBAFd,UAMA,4BACIA,UAAU,eACVW,QAAW,WACP,EAAK7B,MAAMX,QAAQoB,KAAK,aACxBC,OAAOC,SAASC,WAJxB,iB,GAtDgBkB,IAAMC,WCDtCC,EAAgB,oJAECC,E,4MACjB7B,MAAQ,CACJC,MAAO,GACPC,SAAU,GACV4B,WAAY,GACZC,UAAW,GACXnB,MAAO,I,EAGXoB,SAAW,WACP7C,EACKW,OACAmC,+BAA+B,EAAKjC,MAAMC,MAAO,EAAKD,MAAME,UAAUC,MAAK,SAAA+B,GACxE/C,EAASgD,WAAWC,IAAI,UAAUC,MAAMH,EAAMI,KAAKC,KAAKC,IAAI,CACxDvC,MAAO,EAAKD,MAAMC,MAClB6B,WAAY,EAAK9B,MAAM8B,WACvBC,UAAW,EAAK/B,MAAM+B,UACtBU,IAAK,GAELC,MAAOd,IACRzB,MAAK,WACJ,EAAKP,MAAMX,QAAQoB,KAAK,cACxBC,OAAOC,SAASC,YACjBC,OAAM,SAAAG,GAAK,OAAI+B,QAAQC,IAAIhC,SAC/BH,OAAM,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAACC,MAAOF,EAAIG,c,uDAGxC,IAAD,OACL,OACI,yBAAKC,UAAU,mBAGP,2CACCC,KAAKf,MAAMY,MAAMI,OAAS,GAAK,2BAAID,KAAKf,MAAMY,OAC/C,0BAAME,UAAU,cAAcG,SAAUF,KAAKG,cACzC,+BACI,2BACIE,YAAY,aACZD,KAAK,OACLE,MAAON,KAAKf,MAAM8B,WAClBR,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAACmB,WAAYP,EAAMC,OAAOH,YAGnE,+BACI,2BACID,YAAY,YACZD,KAAK,OACLE,MAAON,KAAKf,MAAM+B,UAClBT,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAACoB,UAAWR,EAAMC,OAAOH,YAGlE,+BACI,2BACID,YAAY,QACZD,KAAK,QACLE,MAAON,KAAKf,MAAMC,MAClBqB,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAACV,MAAOsB,EAAMC,OAAOH,YAG9D,+BACI,2BACID,YAAY,WACZD,KAAK,WACLE,MAAON,KAAKf,MAAME,SAClBoB,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAACT,SAAUqB,EAAMC,OAAOH,aAIrE,yBAAKP,UAAU,yBACX,4BACI+B,SAAS,eACTpB,QAASV,KAAKiB,UAFlB,WAMA,4BACIP,QAAS,WACL,EAAK7B,MAAMX,QAAQoB,KAAK,KACxBC,OAAOC,SAASC,UAEpBM,UAAU,gBALd,gB,GA3EcY,IAAMC,W,wGCKvBmB,G,yDAEjB,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAyBVmD,QAAU,WACN,EAAKpC,SAAS,CAAC8B,IAAK,EAAKzC,MAAMgD,SAE/B7D,EAASgD,WAAWC,IAApB,gBAAiC,EAAKxC,MAAM0C,KAAKC,MAAOU,OAAO,CAC3DR,IAAK,EAAKzC,MAAMgD,SAEpB,EAAKpD,MAAMmD,QAAQ,EAAK/C,MAAMgD,QAC9B,EAAKrC,SAAS,CAAEuC,SAAS,KAjCV,EAoCnBC,YAAc,WACV,EAAKxC,SAAS,CAACyC,QAAS,EAAKpD,MAAMqD,aACnClE,EAASgD,WAAWC,IAApB,gBAAiC,EAAKxC,MAAM0C,KAAKC,MAAOU,OAAO,CAC3DG,QAAS,EAAKpD,MAAMqD,aAExB,EAAKzD,MAAMuD,YAAY,EAAKnD,MAAMqD,YAClC,EAAK1C,SAAS,CAAE2C,aAAa,KA1Cd,EA6CnBC,WAAa,WACT,EAAK5C,SAAS,CAAC6C,OAAQ,EAAKxD,MAAMyD,YAClCtE,EAASgD,WAAWC,IAApB,gBAAiC,EAAKxC,MAAM0C,KAAKC,MAAOU,OAAO,CAC3DO,OAAQ,EAAKxD,MAAMyD,YAEvB,EAAK7D,MAAM2D,WAAW,EAAKvD,MAAMyD,WACjC,EAAK9C,SAAS,CAAE+C,YAAY,KAnDb,EAsDnBC,OAAS,SAACC,GACN,IAAIC,EAAUD,EACd,OAAOE,IAAoB,CAAED,UAASE,SAAS,OAAQC,SAAS,QAtDhE,EAAKhE,MAAQ,CACTyC,IAAK,GACLO,OAAQ,GACRI,QAAS,GACTC,WAAY,GACZG,OAAQ,GACRC,UAAW,GACXP,SAAS,EACTI,aAAa,EACbI,YAAY,GAXD,E,gEAgBf3C,KAAKJ,SAAS,CACV8B,IAAM1B,KAAKnB,MAAM0C,KAAKG,IACtBO,OAAQjC,KAAKnB,MAAM0C,KAAKG,IACxBW,QAASrC,KAAKnB,MAAM0C,KAAKc,QACzBC,WAAYtC,KAAKnB,MAAM0C,KAAKc,QAC5BI,OAAQzC,KAAKnB,MAAM0C,KAAKkB,OACxBC,UAAW1C,KAAKnB,MAAM0C,KAAKkB,W,+BAqCxB,IAAD,OACN,OACI,yBAAK1C,UAAU,oBACX,6BACI,yBACIA,UAAU,iBACVmD,IAAKlD,KAAKnB,MAAM0C,KAAKI,MACrBwB,IAAI,aAIZ,yBAAKpD,UAAU,WAAf,YACcC,KAAKnB,MAAM0C,KAAKR,WAD9B,IAC2Cf,KAAKnB,MAAM0C,KAAKP,WAGvDhB,KAAKf,MAAMkD,QACP,6BACI,6BACI,8BACIpC,UAAU,WACVO,MAAON,KAAKf,MAAMgD,OAClB1B,SAAU,SAAAC,GAAK,OAAI,EAAKZ,SAAS,CAAEqC,OAAQzB,EAAMC,OAAOH,YAGhE,4BAAQP,UAAU,WAAWW,QAASV,KAAKgC,SAA3C,QAGA,4BAAQjC,UAAU,WAAWW,QAAS,kBAAM,EAAKd,SAAS,CAAEuC,SAAS,EAAOF,OAAQ,EAAKhD,MAAMyC,QAA/F,WAKR,6BACI,yBAAK3B,UAAU,OACVC,KAAKf,MAAMyC,KAEhB,4BAAQ3B,UAAU,WAAWW,QAAS,kBAAM,EAAKd,SAAS,CAAEuC,SAAS,MACtC,IAA1BnC,KAAKf,MAAMyC,IAAIzB,OAAe,qBAAuB,sBAIlE,yBAAKF,UAAU,SAEXC,KAAKf,MAAMsD,YACP,6BACI,6BACI,kBAAC,IAAD,CACIS,SAAU,OACVC,SAAU,KACVH,QAAS9C,KAAKnB,MAAMwD,QACpB/B,MAAON,KAAKf,MAAMqD,WAClBc,OAAO,EACPC,cAAerD,KAAK4C,OAAO5C,KAAKnB,MAAMwD,SACtCtC,UAAU,WACVQ,SAAU,SAAAsC,GACNA,EAAQA,EAAMS,KAAI,SAAAC,GACd,MAAO,CACHC,KAAMD,EAAKC,KAAKC,MAAM,KAAK,GAC3BC,GAAIH,EAAKG,OAGjB,EAAK9D,SAAS,CAAE0C,WAAYO,KAEhCxC,YAAY,2BAGpB,4BAAQN,UAAU,cAAcW,QAASV,KAAKoC,aAA9C,QAGA,4BAAQrC,UAAU,cAAcW,QAAS,kBAAM,EAAKd,SAAS,CAAE2C,aAAa,EAAOD,WAAY,EAAKrD,MAAMoD,YAA1G,WAKR,6BACI,6BACI,4BAAQtC,UAAU,cAAcW,QAAS,kBAAM,EAAKd,SAAS,CAAE2C,aAAa,MACvEvC,KAAKf,MAAMoD,SAAyC,IAA9BrC,KAAKf,MAAMoD,QAAQpC,OAAe,4BAA8B,iCAG/F,yBAAKF,UAAU,YAEPC,KAAKnB,MAAM0C,KAAKc,SAAWrC,KAAKnB,MAAM0C,KAAKc,QAAQiB,KAAI,SAAAK,GAAM,OAAI,4BAAQ5D,UAAU,OAAO6D,IAAKD,EAAOD,IAAKC,EAAOH,WAM9HxD,KAAKf,MAAM0D,WACP,6BACI,6BACI,kBAAC,IAAD,CACIK,SAAU,OACVC,SAAU,KACVH,QAAS9C,KAAKnB,MAAM4D,OACpBnC,MAAON,KAAKf,MAAMyD,UAClBU,OAAO,EACPC,cAAerD,KAAK4C,OAAO5C,KAAKnB,MAAM4D,QACtC1C,UAAU,WACVQ,SAAU,SAAAgD,GAAI,OAAI,EAAK3D,SAAS,CAAE8C,UAAWa,KAC7ClD,YAAY,0BAGpB,4BAAQN,UAAU,cAAcW,QAASV,KAAKwC,YAA9C,QAGA,4BAAQzC,UAAU,cAAcW,QAAS,kBAAM,EAAKd,SAAS,CAAE+C,YAAY,EAAOD,UAAW,EAAKzD,MAAMwD,WAAxG,WAKR,6BACI,6BACI,4BAAQ1C,UAAU,cAAcW,QAAS,kBAAM,EAAKd,SAAS,CAAE+C,YAAY,MACtE3C,KAAKf,MAAMwD,QAAuC,IAA7BzC,KAAKf,MAAMwD,OAAOxC,OAAe,2BAA6B,kCAG5F,yBAAKF,UAAU,YAEPC,KAAKnB,MAAM0C,KAAKkB,QAAUzC,KAAKnB,MAAM0C,KAAKkB,OAAOa,KAAI,SAAAO,GAAK,OAAI,4BAAQ9D,UAAU,OAAO6D,IAAKC,EAAMH,IAAKG,EAAML,gB,GApLxG7C,IAAMC,Y,yBCwf5B,M,4DA3eXkD,KAAO,SAACC,EAAUC,GACdD,EAASE,SAAQ,SAAAV,GACb,IAAMzD,EAAU,CACZoE,KAAMX,EAAKW,KACXC,UAAW/F,EAASgD,SAASgD,YAAYC,UACzC9C,KAAMgC,EAAKhC,KACX+C,MAAM,GAEV,EAAKC,QAAQP,GAAM1C,MAAM,WAAWhC,KAAKQ,O,KAIjD0E,M,uCAAQ,WAAO1E,GAAP,6BAAA2E,EAAA,+DAC0C3E,EAAQ4E,MAA/CnD,EADH,EACGA,KAAM2C,EADT,EACSA,KAAMC,EADf,EACeA,UAAWG,EAD1B,EAC0BA,KAAMK,EADhC,EACgCA,OACxBC,EAAO9E,EAAZ8D,IACDiB,EAAY,IAAIC,KAAKX,GAHvB,kBAKG,CACHS,MACAC,YACAX,OACAI,OACA/C,OACAoD,WAXA,2C,2DAeRI,I,uCAAM,WAAOC,EAAUhB,GAAjB,SAAAS,EAAA,sDACF,EAAKF,QAAQP,GAAM1C,MAAM,UAAU2D,GAAG,cAAtC,uCAAqD,WAAOC,GAAP,SAAAT,EAAA,kEAAoBO,EAApB,SAAmC,EAAKR,MAAMU,GAA9C,uGAArD,kCAAAlF,KAAA,gBADE,2C,6DAQNmF,gBAAkB,SAACnB,EAAMgB,GACrB,EAAKT,QAAQP,GAAM1C,MAAnB,mBAAqC,EAAKE,MAAOF,MAAM,aAAa2D,GAAG,QAAvE,uCAAgF,WAAOC,GAAP,SAAAT,EAAA,+EAAoBO,EAASE,IAA7B,2CAAhF,kCAAAlF,KAAA,iB,KAGJoF,wBAA0B,SAACpB,GACvB,EAAKO,QAAQP,GAAM1C,MAAnB,mBAAqC,EAAKE,MAAOF,MAAM,aAAa+D,O,KAGxEC,qBAAuB,SAACC,EAAKC,GACzBpH,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,cAAsDyD,GAAG,cAAzD,uCAAwE,WAAOC,GAAP,SAAAT,EAAA,+EAAoBc,EAAIL,IAAxB,2CAAxE,uDACA9G,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,cAAsDyD,GAAG,gBAAzD,uCAA0E,WAAOC,GAAP,SAAAT,EAAA,+EAAoBe,EAAON,IAA3B,2CAA1E,wD,KAGJO,6BAA+B,WAC3BrH,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,cAAsD6D,O,KAqE1DK,mB,uCAAqB,WAAOC,EAAUC,EAAaC,GAA9B,SAAApB,EAAA,2DAEGqB,GAAfF,GACe,MAAfA,GACsB,MAAtBA,EAAY3F,QACU,GAAtB2F,EAAY3F,QAEb0F,EAAWA,EAAS/C,QAAO,SAACtC,GAAW,OAAOA,IAAU,EAAKkB,QACpD8B,KAAI,SAAC/B,GAAD,OAAUsE,EAAgBN,IAAIhE,MAG3CoE,EAASrC,KAAI,SAAC/B,GACV,GAAIA,GAAQ,EAAKC,IAAK,CAElB,IAAIuE,GAAS,EACbH,EAAYtC,KAAI,SAAC0C,GACTA,IAAgBzE,IAChBwE,GAAS,OAGF,IAAXA,GACAF,EAAgBN,IAAIhE,OArBnB,2C,+DA6BrB0E,W,uCAAa,WAAOC,EAAOC,GAAd,SAAA1B,EAAA,sEACHrG,EAASgD,WAAWC,IAAI,UAAU+E,KAAK,SAC5ChH,MAAK,SAAAiH,GACF,IAAIC,EAAcD,EAAS3B,OAAS,GAChC6B,EAAeD,EAAW,EAAK9E,KAAKgF,SAAW,GAC/CC,EAAiBH,EAAW,EAAK9E,KAAKkF,kBAAoB,GAC1DC,EAAkBL,EAAW,EAAK9E,KAAKoF,mBAAqB,GAC5DhB,EAAciB,OAAOC,OAAOP,EAAaE,EAAeE,GAGxDI,EAAmB,IAAIC,IAC3B,IAAK,IAAInD,KAASyC,EAAW,EAAK9E,KAAKiB,OACnCsE,EAAiBxB,IAAIe,EAAW,EAAK9E,KAAKiB,OAAOoB,GAAOL,MAG5D,IAAMyD,EAAoB,IAAID,IAC9B,IAAI,IAAIrD,KAAU2C,EAAW,EAAK9E,KAAKa,QACnC4E,EAAkB1B,IAAIe,EAAW,EAAK9E,KAAKa,QAAQsB,GAAQH,MAI/D,IAAIqC,EAAkB,IAAImB,IAC1B,EAAKtB,mBAAmBmB,OAAOK,KAAKZ,GAAaO,OAAOK,KAAKtB,GAAcC,GApB7D,oBAuBGA,GAvBH,IAuBd,2BAAkC,CAAC,IAA1BtE,EAAyB,QAC1B4F,GAAe,EACfC,EAAc,GACdC,EAAiB,GACrB,GAAGlB,EAAY,CACX,IAAK,IAAIxC,KAAU2C,EAAW/E,GAAMc,QAC5B4E,EAAkBK,IAAIhB,EAAW/E,GAAMc,QAAQsB,GAAQH,QACvD2D,GAAe,GAEnBC,EAAY9H,KAAKgH,EAAW/E,GAAMc,QAAQsB,GAAQH,MAEtD,IAAK,IAAIK,KAASyC,EAAW/E,GAAMkB,OAC3BsE,EAAiBO,IAAIhB,EAAW/E,GAAMkB,OAAOoB,GAAOL,QACpD2D,GAAe,GAGnBE,GADAA,EAAiBA,EAAeE,OAAOjB,EAAW/E,GAAMkB,OAAOoB,GAAOL,OACtC+D,OAAO,MACvCjB,EAAW/E,GAAMiG,WAAaH,MAE/B,CAEH,IAAK,IAAI1D,KADTwD,GAAe,EACIb,EAAW/E,GAAMc,QAChC+E,EAAY9H,KAAKgH,EAAW/E,GAAMc,QAAQsB,GAAQH,MAEtD,IAAK,IAAIK,KAASyC,EAAW/E,GAAMkB,OAE/B4E,GADAA,EAAiBA,EAAeE,OAAOjB,EAAW/E,GAAMkB,OAAOoB,GAAOL,OACtC+D,OAAO,MACvCjB,EAAW/E,GAAMiG,WAAaH,EAGlCF,GACAjB,EAAM5G,KAAK,CACPkC,IAAKD,EACLR,WAAYuF,EAAW/E,GAAMR,WAC7BC,UAAWsF,EAAW/E,GAAMP,UAC5BU,IAAK4E,EAAW/E,GAAMG,IACtBmC,MAAOyC,EAAW/E,GAAMiG,WACxBC,QAASL,EACTzF,MAAO2E,EAAW/E,GAAMI,SA7DtB,kCAiEfjC,OAAM,SAAAG,GACL+B,QAAQC,IAAIhC,MApEP,2C,6DAwGb6H,kBAAoB,SAAC1C,GACjB5G,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,aAAqDyD,GAAG,cAAxD,uCAAuE,WAAOC,GAAP,SAAAT,EAAA,+EAAoBO,EAASE,IAA7B,2CAAvE,wD,KAGJyC,0BAA4B,WACxBvJ,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,aAAqD6D,O,KAUzDuC,mBAAqB,SAACC,EAAcC,GAChC1J,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,uBAA+DyD,GAAG,cAAlE,uCAAiF,WAAOC,GAAP,SAAAT,EAAA,+EAAoBoD,EAAa3C,IAAjC,2CAAjF,uDACA9G,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,uBAA+DyD,GAAG,gBAAlE,uCAAmF,WAAOC,GAAP,SAAAT,EAAA,+EAAoBqD,EAAgB5C,IAApC,2CAAnF,wD,KAGJ6C,4BAA8B,WAC1B3J,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,uBAA+D6D,O,KAGnE2C,e,uCAAiB,WAAO9B,GAAP,SAAAzB,EAAA,sEACPrG,EAASgD,WAAWC,IAApB,UAAkC+E,KAAK,SAC5ChH,MAAK,SAAA6I,GACE,IAAIC,EAAcD,EAAavD,MAC/B,IAAK,IAAIyD,KAAWD,EAAY,EAAK1G,KAAKoF,kBAAkB,CACxD,IAAIwB,EAAc,GAClB,IAAK,IAAIvE,KAASqE,EAAYC,GAAS1F,OAEnC2F,GADAA,EAAcA,EAAYb,OAAOW,EAAYC,GAAS1F,OAAOoB,GAAOL,OAC1C+D,OAAO,KAErCW,EAAYC,GAASE,UAAYD,EACjC,IAAIE,EAAe,GACnB,IAAK,IAAI3E,KAAUuE,EAAYC,GAAS9F,QACpCiG,EAAahJ,KAAK4I,EAAYC,GAAS9F,QAAQsB,GAAQH,MAE3D0C,EAAM5G,KAAK,CACPkC,IAAK2G,EACLpH,WAAYmH,EAAYC,GAASpH,WACjCC,UAAWkH,EAAYC,GAASnH,UAChCU,IAAKwG,EAAYC,GAASzG,IAC1BmC,MAAOqE,EAAYC,GAASE,UAC5BZ,QAASa,EACT3G,MAAOuG,EAAYC,GAASxG,YAtB/B,2C,2DA6BjB4G,Y,uCAAc,WAAOrC,GAAP,SAAAzB,EAAA,sEACJrG,EAASgD,WAAWC,IAApB,UAAkC+E,KAAK,SAC5ChH,MAAK,SAAA6I,GACE,IAAIC,EAAcD,EAAavD,MAC/B,IAAK,IAAIyD,KAAWD,EAAY,EAAK1G,KAAKoF,kBAAkB,CACxD,IAAIwB,EAAc,GAClB,IAAK,IAAIvE,KAASqE,EAAYC,GAAS1F,OAEnC2F,GADAA,EAAcA,EAAYb,OAAOW,EAAYC,GAAS1F,OAAOoB,GAAOL,OAC1C+D,OAAO,KAErCW,EAAYC,GAASE,UAAYD,EACjC,IAAIE,EAAe,GACnB,IAAK,IAAI3E,KAAUuE,EAAYC,GAAS9F,QACpCiG,EAAahJ,KAAK4I,EAAYC,GAAS9F,QAAQsB,GAAQH,MAE3D0C,EAAM5G,KAAK,CACPkC,IAAK2G,EACLpH,WAAYmH,EAAYC,GAASpH,WACjCC,UAAWkH,EAAYC,GAASnH,UAChCU,IAAKwG,EAAYC,GAASzG,IAC1BmC,MAAOqE,EAAYC,GAASE,UAC5BZ,QAASa,EACT3G,MAAOuG,EAAYC,GAASxG,YAtBlC,2C,0GAhUNqC,GACJ,OAAO5F,EAASgD,WAAWC,IAApB,mBAAoC2C,M,uEAWjCxC,G,iFACIpD,EAASgD,WAAWC,IAApB,gBAAiCG,EAAjC,WAA8C4E,KAAK,S,uCAAU1B,O,4HAkC3EV,GACAhE,KAAKuE,QAAQP,GAAM1C,MAAM,UAAU+D,Q,gCA+M7BmD,GAGN,IAAIC,EAAYD,EAAUE,OAAO,KACjC,OAAkB,GAAdD,EAEOD,EAEAA,EAAUG,UAAU,EAAGF,K,oCAaxBjH,GAEVpD,EAASgD,WAAWC,IAApB,iBAAkCrB,KAAKwB,IAAvC,uBAAgEU,OAAhE,eAAyEV,EAAMA,IAC/EpD,EAASgD,WAAWC,IAApB,gBAAiCG,EAAjC,wBAA2DU,OAA3D,eAAoElC,KAAKwB,IAAMxB,KAAKwB,Q,oCAsE1E0C,EAAMW,EAAWtD,EAAMC,GACjC,GAAI0C,GAAQW,EAAW,CACnB,GAAkB,WAAdtD,EAAKiC,KACL,OAAOU,EAEX,IAAI6B,GAAUxE,EAAKqD,MAAS5E,KAAKwB,IAAO,MAAQxB,KAAK4I,UAAUrH,EAAKiC,OAAS,MAE7EU,EAAOA,EAAK2E,QAAQ,MAAO,MAClB5I,OAAS,GACd8F,GAAU7B,EAEV6B,GAAU7B,EAAKyE,UAAU,EAAG,IAAM,MAEtC,IAAIG,EAAO,IAAIhE,KAAKD,GAEhBkE,IADM,IAAIjE,MACgBkE,UAAYF,EAAKE,WAAtB,MACzB,GAAID,EAAqB,EAAG,CACxB,IAAIE,EAAQH,EAAKI,WACbC,EAAUL,EAAKM,aACfC,EAAOJ,GAAS,GAAK,KAAO,KAIhClD,GAAU,UAFVkD,EAAkB,KADlBA,GAAS,IACaA,EAAQ,IAEJ,KAD1BE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACC,IAAME,OAC7C,GAAIN,EAAqB,EAAG,CAE/BhD,GAAU,SADA+C,EAAKQ,WAAW7F,MAAM,KAAK,OAElC,CACH,IAAI8F,EAAOT,EAAKQ,WAAW7F,MAAM,KAEjCsC,GAAU,UADAwD,EAAI,GAAK,EAAQA,EAAI,IAGnC,OAAOxD,K,oCAUDvE,GACVpD,EAASgD,WAAWC,IAApB,gBAAiCrB,KAAKwB,IAAtC,8BAA+DA,IAAOgE,SACrEpG,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,MAEhBzB,EAASgD,WAAWC,IAApB,gBAAiCG,EAAjC,6BAAyDxB,KAAKwB,MAAOgE,SACpEpG,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,Q,qCAOL2B,EAAKT,EAAYC,GAAY,IAAD,OAEvC5C,EAASgD,WAAWC,IAAI,aAAa/B,KAAK,CACtCkK,MAAO,CACH,CACI5E,IAAK,EACLV,KAAM,6BACNC,UAAW/F,EAASgD,SAASgD,YAAYC,UACzC9C,KAAM,CACFqD,IAAK,EACLpB,KAAM,UAEVmB,QAAQ,IAGhB8E,WAAY,KACbrK,MAAK,SAAAsK,GAAS,IAAD,EACZtL,EAASgD,WAAWC,IAApB,oBAAqCqI,EAAK9F,IAA1C,cAA0D1B,QAA1D,mBACKV,EAAM,CACHT,WAAYA,EACZC,UAAWA,EACX2I,UAAW,OAJnB,cAMK,EAAKnI,IAAM,CACRT,WAAW,GAAD,OAAK,EAAKA,YACpBC,UAAU,GAAD,OAAK,EAAKA,WACnB2I,UAAW,OATnB,IAaAvL,EAASgD,WAAWC,IAApB,gBAAiC,EAAKG,IAAtC,cAAsDU,OAAtD,eACKV,EAAM,CACHT,WAAYA,EACZC,UAAWA,EACXgD,KAAM0F,EAAK9F,OAGlBxE,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,MAGhBzB,EAASgD,WAAWC,IAApB,gBAAiCG,EAAjC,cAAiDU,OAAjD,eACK,EAAKV,IAAM,CACRT,WAAW,GAAD,OAAK,EAAKA,YACpBC,UAAU,GAAD,OAAK,EAAKA,WACnBgD,KAAM0F,EAAK9F,OAGlBxE,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,SAKpBzB,EAASgD,WAAWC,IAApB,gBAAiCrB,KAAKwB,IAAtC,8BAA+DA,IAAOgE,SACrEpG,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,MAEhBzB,EAASgD,WAAWC,IAApB,gBAAiCG,EAAjC,6BAAyDxB,KAAKwB,MAAOgE,SACpEpG,MAAK,eAEHM,OAAM,SAACG,GACN+B,QAAQC,IAAIhC,Q,0BAhehB,OAAQzB,EAASW,OAAO6K,aAAe,IAAIpI,M,iCAQ3C,OAAQpD,EAASW,OAAO6K,aAAe,IAAIC,YAAYpG,MAAM,KAAK,K,gCAIlE,OAAQrF,EAASW,OAAO6K,aAAe,IAAIC,YAAYpG,MAAM,KAAK,O,MCZrDqG,E,kDACjB,WAAYjL,GAAQ,IAAD,8BACf,cAAMA,IAgBVkL,cAAgB,SAAC1H,GACb,IACIkH,EAAM,GACV,GAAIlH,EAAQpC,OAFA,EAEgB,CACxB,IAAK,IAAI+J,EAAI,EAAGA,EAAKC,EAAYD,IAC7BT,EAAIjK,KAAK+C,EAAQ2H,IAErBT,EAAIjK,KAAK,oBAETiK,EAAMlH,EAKV,OAHkB,GAAdkH,EAAItJ,QACJsJ,EAAIjK,KAAK,cAGTiK,EAAIjG,KAAK,SAAAC,GAAQ,OAAQ,yBAAKxD,UAAU,YAAW,uBAAGA,UAAU,gBAAgBwD,QAhCrE,EAoCnB2G,cAAgB,SAACC,GACb,IAAIC,EAAW,EAAKnL,MAAMiH,MAAMiE,GACZ,OAAhBC,EAAS1G,GACT2G,EAAKH,cAAcE,EAAS5I,KAE5BI,QAAQ0I,KAAK,2BAEjB,IAAIC,EAAW,EAAKtL,MAAMiH,MAC1BqE,EAASC,OAAOL,EAAK,GACrB,EAAKvK,SAAS,CACVsG,MAAOqE,KA9CI,EAkDnBE,cAAgB,WAEZ,OADA7I,QAAQC,IAAI,EAAK5C,MAAMiH,OAChB,EAAKjH,MAAMiH,MAAM5C,KAAI,SAACoH,EAAKP,GAE9B,OADAvI,QAAQC,IAAI6I,EAAI3J,YAEZ,yBAAKhB,UAAY,cACb,yBAAKA,UAAU,sBACX,yBACIA,UAAU,gBACVmD,IAAKwH,EAAI/I,QAEb,4BAAQ5B,UAAU,kBAAkBW,QAAS,kBAAM,EAAKwJ,cAAcC,KAClE,6BACI,yBACIpK,UAAU,sBACVmD,IAAKyH,EAAQ,SAK7B,yBAAK5K,UAAU,2BACX,6BACA,yBAAKA,UAAU,YACX,2BAAI2K,EAAI3J,WAAa,IAAM2J,EAAI1J,YAEnC,2BAAI0J,EAAIhJ,KACR,uBAAG3B,UAAU,cAAb,yBAEK,EAAKgK,cAAcW,EAAIjD,eA5E5C,EAAKxI,MAAQ,CACTiH,MAAO,IAHI,E,8LAQXA,EAAQlG,KAAKf,MAAMiH,M,SACjBmE,EAAKpE,WAAWC,GAAO,G,OAC7BlG,KAAKJ,SAAS,CACVsG,MAAOA,IACR,WACCtE,QAAQC,IAAI,kBAAoB,EAAK5C,MAAMiH,U,qIA4E/C,OACI,yBAAKnG,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eAAf,gBACA,+KAGJ,6BAASA,UAAU,wBACf,yBAAKA,UAAU,sBACdC,KAAKyK,sB,GAnGU9J,IAAMC,WCArBgK,E,kDACjB,WAAY/L,GAAQ,IAAD,8BACf,cAAMA,IAgBVkL,cAAgB,SAAC1H,GACb,IACIkH,EAAM,GACV,GAAIlH,EAAQpC,OAFA,EAEgB,CACxB,IAAK,IAAI+J,EAAI,EAAGA,EAAKC,EAAYD,IAC7BT,EAAIjK,KAAK+C,EAAQ2H,IAErBT,EAAIjK,KAAK,oBAETiK,EAAMlH,EAKV,OAHkB,GAAdkH,EAAItJ,QACJsJ,EAAIjK,KAAK,cAGTiK,EAAIjG,KAAK,SAAAC,GAAQ,OAAQ,yBAAKxD,UAAU,YAAW,uBAAGA,UAAU,gBAAgBwD,QAhCrE,EAoCnB2G,cAAgB,SAACC,GACb,IAAIC,EAAW,EAAKnL,MAAMiH,MAAMiE,GACZ,OAAhBC,EAAS1G,GACT2G,EAAKH,cAAcE,EAAS5I,KAE5BI,QAAQ0I,KAAK,2BAEjB,IAAIC,EAAW,EAAKtL,MAAMiH,MAC1BqE,EAASC,OAAOL,EAAK,GACrB,EAAKvK,SAAS,CACVsG,MAAOqE,KA9CI,EAkDnBE,cAAgB,WAEZ,OADA7I,QAAQC,IAAI,EAAK5C,MAAMiH,OAChB,EAAKjH,MAAMiH,MAAM5C,KAAI,SAACoH,EAAKP,GAE9B,OADAvI,QAAQC,IAAI6I,EAAI3J,YAEZ,yBAAKhB,UAAY,cACb,yBAAKA,UAAU,sBACX,yBACIA,UAAU,gBACVmD,IAAKwH,EAAI/I,QAEb,4BAAQ5B,UAAU,kBAAkBW,QAAS,kBAAM,EAAKwJ,cAAcC,KAClE,6BACI,yBACIpK,UAAU,sBACVmD,IAAKyH,EAAQ,SAK7B,yBAAK5K,UAAU,2BACX,yBAAKA,UAAU,YACX,2BAAI2K,EAAI3J,WAAa,IAAM2J,EAAI1J,YAEnC,2BAAI0J,EAAIhJ,KACR,uBAAG3B,UAAU,cAAb,yBAEK,EAAKgK,cAAcW,EAAIjD,eA3E5C,EAAKxI,MAAQ,CACTiH,MAAO,IAHI,E,8LAQXA,EAAQlG,KAAKf,MAAMiH,M,SACjBmE,EAAKpE,WAAWC,GAAO,G,OAC7BlG,KAAKJ,SAAS,CACVsG,MAAOA,IACR,WACCtE,QAAQC,IAAI,kBAAoB,EAAK5C,MAAMiH,U,qIA2E/C,OACI,yBAAKnG,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eAAf,gBACA,oJAEJ,6BAASA,UAAU,wBACf,yBAAKA,UAAU,sBACdC,KAAKyK,sB,GAjGW9J,IAAMC,W,QCItBiK,G,mNACjB5L,MAAQ,CACJuH,QAAS,GACTsE,cAAe,GACfC,gBAAiB,I,EAqBrBnI,OAAS,SAACC,GACN,IAAIC,EAAUD,EACd,OAAOE,IAAoB,CAAED,UAASE,SAAS,OAAQC,SAAS,Q,EAGpE+H,aAAe,WACX,IAAID,EAAkB,EAAK9L,MAAM8L,gBACjC3M,EAASgD,WAAWC,IAAI,aAAa/B,KAAK,CACtCmK,WAAYsB,EACZvB,MAAQ,CACI,CACItF,KAAM,EAAKrF,MAAM0C,KAAKR,WAAa,2BACnCoD,UAAW/F,EAASgD,SAASgD,YAAYC,UACzCM,QAAQ,EACRpD,KAAM,CACFqD,IAAK,EACLlB,GAAI,EACJF,KAAM,cAI3BpE,MAAK,SAAAsK,GACJ,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAK/K,MAAM6L,cAAc7K,OAAQ+J,IAAK,CACtD,IAAIxI,EAAM,EAAKvC,MAAM6L,cAAcd,GAAGtG,GAClCF,EAAO,EAAKvE,MAAM6L,cAAcd,GAAGxG,KACvCpF,EAASgD,WAAWC,IAApB,iBAAkCG,EAAlC,cAAkDU,OAAlD,eACKwH,EAAK9F,IAAM8F,EAAK9F,MAErBxF,EAASgD,WAAWC,IAApB,oBAAqCqI,EAAK9F,IAA1C,oBAAyDpC,IAAOU,OAAO,CACnEsB,KAAMA,EACNyH,QAAQ,IAGhB7M,EAASgD,WAAWC,IAApB,iBAAkC,EAAKxC,MAAM0C,KAAKC,IAAlD,cAAkEU,OAAlE,eACKwH,EAAK9F,IAAM8F,EAAK9F,MAErBxF,EAASgD,WAAWC,IAApB,oBAAqCqI,EAAK9F,IAA1C,oBAAyD,EAAK/E,MAAM0C,KAAKC,MAAOU,OAAO,CACnFsB,KAAM,EAAK3E,MAAM0C,KAAKR,WAAa,IAAM,EAAKlC,MAAM0C,KAAKP,UACzDiK,QAAQ,IAEZ,EAAKpM,MAAMqM,a,kEA1DE,IAAD,OAEhB9M,EAASgD,WAAWC,IAApB,gBAAiCrB,KAAKnB,MAAM0C,KAAKC,IAAjD,aAAgE4E,KAAK,SAAShH,MAAK,SAAAC,GAC/E,IAAI8L,EAAU9L,EAAIqF,MACdqB,EAAS,GACb,IAAK,IAAIvE,KAAO2J,EAAS,CACrB,IAAI5J,EAAO,CACPmC,GAAIlC,EACJgC,KAAM2H,EAAQ3J,GAAKT,WAAa,IAAMoK,EAAQ3J,GAAKR,WAEvD+E,EAAOzG,KAAKiC,GAEhB,EAAK3B,SAAS,CAAE4G,QAAST,IAAU,WAC/BnE,QAAQC,IAAI,EAAK5C,MAAMuH,iB,+BAiDxB,IAAD,OACN,OACI,6BACI,yBAAKtG,SAAUF,KAAKG,cAChB,+BAEI,2BAAOC,KAAK,OACRL,UAAU,mBACVM,YAAY,aACZC,MAAON,KAAKf,MAAM8L,gBAClBxK,SAAU,SAAAC,GACN,EAAKZ,SAAS,CAACmL,gBAAiBvK,EAAMC,OAAOH,YAIzD,+BACI,kBAAC,IAAD,CACI0C,SAAU,OACVC,SAAU,KACVH,QAAS9C,KAAKf,MAAMuH,QACpBlG,MAAON,KAAKf,MAAM6L,cAClB1H,OAAO,EACPC,cAAerD,KAAK4C,OAAO5C,KAAKf,MAAMuH,SACtCzG,UAAU,WACVQ,SAAU,SAAAsC,GAAK,OACX,EAAKjD,SAAS,CAAEkL,cAAejI,KAEnCxC,YAAY,6BAGpB,yBAAKN,UAAU,iBACX,4BAAQA,UAAU,gBAAgBW,QAAS,kBAAM,EAAKsK,iBAAtD,WAGA,4BAAQjL,UAAU,gBAAgBW,QAASV,KAAKnB,MAAMqM,QAAtD,iB,GAvGiBvK,IAAMC,YCC1BwK,G,yDAEjB,WAAYvM,GAAO,IAAD,8BACd,cAAMA,IA+BVwM,SAAW,WACPhB,EAAK/E,sBAAsB,SAAAtB,GACvB,IAAIsH,EAAUtH,EAAKU,MACnBtG,EAASgD,WAAWC,IAApB,mBAAoCiK,IAAWlF,KAAK,SAAShH,MAAK,SAAAC,GAC9D,IAAIkM,EAAa,EAAKtM,MAAMuM,MAC5BD,EAAWjM,KAAKgM,GAChB,IAAIG,EAAmB,EAAKxM,MAAMyM,aAC9BC,EAAYtM,EAAIqF,MACpBiH,EAAUjI,GAAK4H,EACfK,EAAUC,IAAMjB,EAAQ,KACxBgB,EAAUE,OAAS,GACnBF,EAAU5H,SAAa0H,EAAiBH,IAAYG,EAAiBH,GAASvH,UAAa,GAC3F0H,EAAiBH,GAAWK,EAC5B,EAAK/L,SACD,CACI4L,MAAOD,EACPG,aAAcD,IAElB,WACI,EAAKK,aAAaR,YAI7B,SAAAtH,GACD,IAAIsH,EAAUtH,EAAKU,MACnB2F,EAAKhF,IAAIiG,GACTjB,EAAKjF,wBAAwBkG,GAC7B,IAAIS,EAAO,EAAK9M,MAAMyM,oBACfK,EAAKT,GAEZ,IAAIU,EAAW,EAAK/M,MAAMuM,MACpBS,EAAQD,EAASE,QAAQZ,GAC3BW,GAAS,GACTD,EAASxB,OAAOyB,EAAO,GAE3B,EAAKrM,SAAS,CAAE4L,MAAOQ,EAAUN,aAAcK,OAEnD1B,EAAK3C,mBACA,SAAAyE,GACG,IAAI3K,EAAM2K,EAASvI,IACnBxF,EAASgD,WAAWC,IAApB,gBAAiCG,IAAO4E,KAAK,SAAShH,MAAK,SAAAC,GAEnD,IAAIkC,EAAOlC,EAAIqF,MACXb,EAAQ,GACR4D,EAAU,GACV2E,EAAiB,EAAKnN,MAAMoN,aAChC,IAAK,IAAIJ,KAAS1K,EAAKkB,OACnBoB,GAAStC,EAAKkB,OAAOwJ,GAAOzI,KAAO,KAEvC,IAAK,IAAIyI,KAAS1K,EAAKc,QACnBoF,EAAQnI,KAAKiC,EAAKc,QAAQ4J,GAAOzI,MAErCjC,EAAKc,QAAUoF,EACflG,EAAKkB,OAASoB,EACduI,EAAe,GAAD,OAAI5K,IAASD,EAC3B,EAAK3B,SAAS,CACVyM,aAAcD,OAGxB1M,OAAM,SAAA4M,GAAI1K,QAAQC,IAAIyK,MACxB,IAAIC,EAASJ,EAASzH,MAClB8H,EAAW,EAAKvN,MAAMuM,MACtBF,EAAUiB,EAAOvI,KACrBwI,EAASlN,KAAKgM,GACdlN,EAASgD,WAAWC,IAApB,mBAAoCiK,IAAWlF,KAAK,SAAShH,KAA7D,uCAAkE,WAAOC,GAAP,iBAAAoF,EAAA,6DAC1DgH,EAAmB,EAAKxM,MAAMyM,cAC9BC,EAAYtM,EAAIqF,OACVhB,GAAK4H,EAH+C,SAIxCjB,EAAKoC,QAAQjL,GAJ2B,OAI9DmK,EAAUC,IAJoD,OAK9DD,EAAUlC,WAAa8C,EAAOxL,WAAa,IAAMwL,EAAOvL,UACxD2K,EAAUE,OAAS,GACnBF,EAAU5H,SAAa0H,EAAiBH,IAAYG,EAAiBH,GAASvH,UAAa,GAC3F4H,EAAUnK,IAAMA,EAChBiK,EAAiBH,GAAWK,EAC5B,EAAK/L,SACD,CACI4L,MAAOgB,EACPd,aAAcD,IAElB,WACI,EAAKK,aAAaR,MAhBoC,4CAAlE,0DAsBH,SAAAa,GACaA,EAASvI,IAAnB,IAEI0H,EADSa,EAASzH,MACDV,KACrBqG,EAAKhF,IAAIiG,GACTjB,EAAKjF,wBAAwBkG,GAC7B,IAAIS,EAAO,EAAK9M,MAAMyM,oBACfK,EAAKT,GAEZ,IAAIU,EAAW,EAAK/M,MAAMuM,MACpBS,EAAQD,EAASE,QAAQZ,GAC3BW,GAAS,GACTD,EAASxB,OAAOyB,EAAO,GAE3B,EAAKrM,SAAS,CAAE4L,MAAOQ,EAAUN,aAAcK,QApIzC,EA6IlBD,aAAe,SAACpI,GACZ2G,EAAKtF,KAAK,SAAAjF,GACN,IAAIiM,EAAO,EAAK9M,MAAMyM,aAClBK,EAAKrI,OACAqI,EAAKrI,GAAImI,OAAOhH,WAAakH,EAAKrI,GAAImI,OAAOhH,UAAY/E,EAAQ+E,aAClEkH,EAAKrI,GAAImI,OAAS/L,GAEtBiM,EAAKrI,GAAIK,SAAW2I,aAAWC,OAAOZ,EAAKrI,GAAIK,SAAUjE,GAAS8M,MAAK,SAACnI,EAAGoI,GAAJ,OAAUA,EAAEhI,UAAYJ,EAAEI,aACjG,EAAKjF,SAAS,CAAE8L,aAAcK,OAElCrI,GACJ2G,EAAKlF,gBAAgBzB,GAAK,SAAAgG,GACtB,IAAIqC,EAAO,EAAK9M,MAAMyM,aAClBK,EAAKrI,KACLqI,EAAKrI,GAAIoJ,QAAQ,EAAKjO,MAAM0C,KAAKC,KAAKmI,UAAYD,EAAKhF,MACvD,EAAK9E,SAAS,CAAE8L,aAAcK,SA5JxB,EAiKlBgB,qBAAuB,WACnB,IAAK,IAAI/C,EAAI,EAAGA,EAAI,EAAK/K,MAAMuM,MAAMvL,OAAQ+J,IACzCK,EAAKhF,IAAI,EAAKpG,MAAMuM,MAAMxB,IAC1BK,EAAKjF,wBAAwB,EAAKnG,MAAMuM,MAAMxB,KApKpC,EAwKlBgD,QAAU,SAACC,EAAOC,GACd,OAAID,EAAMpB,OAAOhH,UAAYqI,EAAOrB,OAAOhH,UAChC,EACAoI,EAAMpB,OAAOhH,UAAYqI,EAAOrB,OAAOhH,WACtC,EAEL,GA9KO,EAiLlBsI,kBAAoB,WAChB,EAAKvN,SAAS,CAAEwN,QAAQ,KAlLV,EAqQlBrD,cAAgB,SAAC1H,GACb,IACIkH,EAAM,GACV,GAAIlH,EAAQpC,OAFA,EAEgB,CACxB,IAAK,IAAI+J,EAAI,EAAGA,EAAKC,EAAYD,IAC7BT,EAAIjK,KAAK+C,EAAQ2H,IAErBT,EAAIjK,KAAK,oBAETiK,EAAMlH,EAEV,OACIkH,EAAIjG,KAAK,SAAAC,GAAQ,OAAQ,yBAAKxD,UAAU,YAAW,uBAAGA,UAAU,gBAAgBwD,QA/QpF,EAAKtE,MAAQ,CACTC,MAAO,GACP2K,YAAa,GACb2B,MAAO,GACPE,aAAc,GACdW,aAAc,GACdgB,YAAY,EACZzB,IAAK,KACL0B,YAAa,GACbC,WAAW,EACXC,SAAS,EACTC,YAAa,KACbL,QAAQ,GAdE,E,gEAmBG,IAAD,OACZ7L,EAAOnD,EAASW,OAAO6K,YACpB1K,EAAsBqC,EAAtBrC,MAAO2K,EAAetI,EAAfsI,YACd7J,KAAKJ,SAAS,CAAEV,QAAO2K,gBACvBzL,EAASgD,WAAWC,IAApB,gBAAiCgJ,EAAK7I,IAAtC,WAAmD4E,KAAK,SAAShH,MAAK,SAAAC,GAElE,IAAIuM,EAAMvM,EAAIqF,MACd,EAAK9E,SAAS,CAAEgM,WAGpB5L,KAAKqL,a,6CA6GLrL,KAAK+M,yB,mCA2CK,IAAD,EACqB/M,KAAKf,MAA5BwO,EADE,EACFA,YACP,OAFS,EACWL,OAET,kBAAC,EAAD,CAAa7L,KAAMvB,KAAKnB,MAAM0C,KAAM2J,OAAQlL,KAAKmN,oBAExDM,EAEI,kBAAC,aAAD,CACIC,gBAAgB,EAChBnM,KAAM,CACFqD,IAAK5E,KAAKnB,MAAM0C,KAAKC,IACrBkC,GAAI1D,KAAKnB,MAAM0C,KAAKC,IACpBgC,KAAOxD,KAAKnB,MAAM0C,KAAKR,WAAa,IAAMf,KAAKnB,MAAM0C,KAAKP,UAC1D2M,OAAQ3N,KAAKnB,MAAM0C,KAAKI,OAE5BoC,SAAU/D,KAAKf,MAAMyM,aAAX,UAA2B+B,IAAe1J,SACpD6J,OAAQ,SAAC7J,GAAD,OAAasG,EAAKvG,KAAKC,EAAU0J,WAXrD,I,wCAgBe,IAAD,OACd,OACI,yBACII,MAAOC,EAAOC,WAEd,yBAAKhO,UAAU,SACX,yBAAKmD,IAAKlD,KAAKnB,MAAM0C,KAAKI,MAAO5B,UAAU,QAC3C,yBAAKA,UAAU,kBAAf,WAIJ,4BAAQA,UAAU,SAASW,QAAS,kBAAM,EAAKd,SAAS,CAAEwN,QAAQ,MAAlE,sBAIIvG,OAAOmH,OAAOhO,KAAKf,MAAMyM,cAAckB,MAAK,SAACnI,EAAEoI,GAAH,OAAS,EAAKG,QAAQvI,EAAEoI,MACnEvJ,KAAI,SAAAC,GACD,OACI,4BACIxD,UAAU,SACVK,KAAK,SACLM,QAAS,WACD,EAAKzB,MAAMwO,aAEXrP,EAASgD,WAAWC,IAApB,mBAAoC,EAAKpC,MAAMwO,YAA/C,oBAAsE,EAAK5O,MAAM0C,KAAKC,MAAOU,OAAO,CAChGyH,UAAWvL,EAASgD,SAASgD,YAAYC,YAGjD,EAAKzE,SAAS,CACV6N,YAAalK,EAAKG,GAClB0J,QAAQ,MAIhB,yBAAKlK,IAAKK,EAAKqI,IAAK7L,UAAU,WAC9B,6BACI,yBAAKA,UAAU,aACVwD,EAAKkG,YAEV,yBAAK1J,UAAW,EAAKd,MAAMwO,cAAgBlK,EAAKG,GAC5C,OAASH,EAAKuJ,QAAQ,EAAKjO,MAAM0C,KAAKC,KAAKmI,UAAYpG,EAAKsI,OAAOhH,UACnE,SAAW,QAGNtB,EAAKsI,OAAOtK,KAGb8I,EAAK4D,cAAc1K,EAAKsI,OAAO3H,KAAMX,EAAKsI,OAAOhH,UAAWtB,EAAKsI,OAAOtK,KAAM,EAAK1C,MAAM0C,KAAKC,KAF1F,c,sCA+BxC,GAAIxB,KAAKf,MAAMwO,aAAezN,KAAKf,MAAMyM,aAAX,UAA2B1L,KAAKf,MAAMwO,cAAejM,IAAK,CACpF,IAAIA,EAAMxB,KAAKf,MAAMyM,aAAX,UAA2B1L,KAAKf,MAAMwO,cAAejM,IAC3DD,EAAOvB,KAAKf,MAAMoN,aAAa7K,GAGnC,OADAI,QAAQC,IAAI,OAAQN,GAEhB,yBAAKxB,UAAY,cACb,yBAAKA,UAAU,sBACX,yBACIA,UAAU,gBACVmD,IAAK3B,EAAKI,SAGlB,yBAAK5B,UAAU,2BACX,2BAAIwB,EAAKR,WAAT,IAAsBQ,EAAKR,YAE3B,2BAAIQ,EAAKG,KACT,oDACC1B,KAAK+J,cAAcxI,EAAKc,c,+BAUzC,OACI,yBAAKwL,MAAOC,EAAOI,WAEf,yBAAKL,MAAOC,EAAOK,aAAcnO,KAAKoO,mBACtC,yBAAKP,MAAOC,EAAOO,MAAOrO,KAAKsO,cAC/B,yBAAKT,MAAOC,EAAOS,UAAWvO,KAAKwO,sB,GAzTd7N,IAAMC,YAgUrCkN,EAAS,CACXI,UAAW,CACPO,KAAM,EACNC,QAAS,OACTC,cAAe,MACfC,OAAQ,SAEZT,YAAa,CACTO,QAAS,OACTD,KAAM,EACNE,cAAe,UAEnBN,KAAM,CACFK,QAAS,OACTD,KAAM,EACNE,cAAe,SACfE,YAAa,MACbC,YAAa,OACbC,iBAAkB,QAClBC,gBAAiB,SAErBT,SAAU,CACNG,QAAS,OACTD,KAAM,EACNE,cAAe,UAEnBZ,UAAW,CACPU,KAAK,EACLC,QAAS,OACTC,cAAe,WClWFM,G,yDACjB,WAAYpQ,GAAQ,IAAD,8BACf,cAAMA,IA0BVqQ,cAAgB,SAAC/E,GACC,EAAKlL,MAAMiH,MAAMiE,GACnB3I,KACR6I,EAAK6E,cAAc,EAAKjQ,MAAMkQ,SAAShF,GAAK3I,KAGhD,IAAI4N,EAAc,EAAKnQ,MAAMiH,MAC7BkJ,EAAY5E,OAAOL,EAAK,GACxB,EAAKvK,SAAS,CACVuP,SAAUC,KApCC,EAwCnBC,eAAiB,SAAClF,GACd,IAAIhC,EAAU,EAAKlJ,MAAMiH,MAAMiE,GAC3BhC,EAAQ3G,IACR6I,EAAKgF,eAAelH,EAAQ3G,IAAK2G,EAAQpH,WAAYoH,EAAQnH,WAE7DY,QAAQ0I,KAAK,2BAEjB,IAAI8E,EAAc,EAAKnQ,MAAMiH,MAC7BkJ,EAAY5E,OAAOL,EAAK,GACxB,EAAKvK,SAAS,CACVuP,SAAUC,KAlDC,EAsDnBrF,cAAgB,SAAC1H,GACb,IACIkH,EAAM,GACV,GAAIlH,EAAQpC,OAFA,EAEgB,CACxB,IAAK,IAAI+J,EAAI,EAAGA,EAAKC,EAAYD,IAC7BT,EAAIjK,KAAK+C,EAAQ2H,IAErBT,EAAIjK,KAAK,oBAETiK,EAAMlH,EAEV,OACIkH,EAAIjG,KAAK,SAAAC,GAAQ,OAAQ,yBAAKxD,UAAU,YAAW,uBAAGA,UAAU,gBAAgBwD,QAlErE,EAuEnB+L,eAAiB,WAEb,OADA1N,QAAQC,IAAI,EAAK5C,MAAMiH,OAChB,EAAKjH,MAAMiH,MAAM5C,KAAI,SAACoH,EAAKP,GAE9B,OADAvI,QAAQC,IAAI6I,EAAI3J,YAEZ,yBAAKhB,UAAU,oBACX,yBAAKA,UAAY,eACb,yBAAKA,UAAU,uBACX,yBACIA,UAAU,iBACVmD,IAAKwH,EAAI/I,QAEb,4BAAQ5B,UAAU,kBAAkBW,QAAS,kBAAM,EAAKwJ,cAAcC,KAClE,6BACI,yBACIpK,UAAU,sBACVmD,IAAKyH,EAAQ,SAK7B,yBAAK5K,UAAU,2BACX,yBAAKA,UAAU,YACX,2BAAI2K,EAAI3J,WAAa,IAAM2J,EAAI1J,YAEnC,2BAAI0J,EAAIhJ,KACR,uBAAG3B,UAAU,cAAb,yBAEK,EAAKgK,cAAcW,EAAIjD,WAIpC,yBAAK1H,UAAU,0BACX,4BACIA,UAAU,eACVW,QAAS,WACL,EAAK2O,eAAelF,KAH5B,UAQA,4BACIpK,UAAU,gBACVW,QAAS,WACL,EAAKwO,cAAc/E,KAH3B,iBA9GhB,EAAKlL,MAAQ,CACTiH,MAAO,IAHI,E,8LAQXA,EAAQlG,KAAKf,MAAMiH,M,SACjBmE,EAAKrC,eAAe9B,G,OAC1BlG,KAAKJ,SAAS,CAACuP,SAAUjJ,IACzBmE,EAAKzC,mBAAL,uCACK,WAAM2H,GAAN,iBAAA9K,EAAA,yDACOjD,EAAM+N,EAAa7K,MACnBwB,EAAQ,EAAKjH,MAAMiH,MACXA,EAAMsJ,MAAK,SAAAjO,GAAI,OAAIA,EAAKC,KAAOA,KAH9C,gCAKa6I,EAAKoF,WAAWvJ,EAAO1E,GALpC,OAMO,EAAK5B,SAAS,CAACsG,MAAOA,IAN7B,2CADL,uDAUK,SAAAqJ,O,qIA4GL,OACI,yBAAKxP,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eAAf,mBACA,mHAEJ,6BAASA,UAAU,wBACdC,KAAKsP,uB,GAzIW3O,IAAMC,YCOtB8O,E,4MACjBzQ,MAAQ,CACJsC,KAAM,GACNgM,WAAW,EACXoC,SAAS,EACTC,SAAS,EACTC,SAAS,EACT/P,SAAS,EACTgQ,SAAS,EACTzN,QAAS,GACTI,OAAQ,I,EAwBZsN,YAAc,WACV,EAAKnQ,SAAS,CACV+P,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACThQ,SAAS,K,EAIjBkQ,WAAa,WACT,EAAKpQ,SAAS,CACV+P,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACThQ,SAAS,K,EAIjBmQ,YAAc,WACV,EAAKrQ,SAAS,CACV+P,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACThQ,SAAS,K,EAIjBoQ,kBAAoB,WAChB,EAAKtQ,SAAS,CACV+P,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACThQ,SAAS,K,EAIjBqQ,YAAc,WACV,EAAKvQ,SAAS,CACV+P,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACThQ,SAAS,K,EAIjBkC,QAAU,SAACN,GACP,IAAIqK,EAAO,EAAK9M,MAAMsC,KACtBwK,EAAKrK,IAAMA,EACX,EAAK9B,SAAS,CAAE2B,KAAMwK,K,EAG1B3J,YAAc,SAACC,GACX,IAAI0J,EAAO,EAAK9M,MAAMsC,KACtBwK,EAAK1J,QAAUA,EACf,EAAKzC,SAAS,CAAE2B,KAAMwK,K,EAG1BvJ,WAAa,SAACC,GACV,IAAIsJ,EAAO,EAAK9M,MAAMsC,KACtBwK,EAAKtJ,OAASA,EACd,EAAK7C,SAAS,CAAE2B,KAAMwK,K,EAG1BqE,OAAS,WACLhS,EAASW,OAAOsR,UAChB,EAAKxR,MAAMX,QAAQoB,KAAK,KACxBC,OAAOC,SAASC,U,kEA3FC,IAAD,OAChBrB,EAASW,OAAOuR,mBAAhB,uCAAmC,WAAO/O,GAAP,eAAAkD,EAAA,sDAC3BjD,EAAMD,EAAKC,IACfI,QAAQC,IAAIL,GACZpD,EAASgD,WAAWC,IAApB,gBAAiCG,IAAO4E,KAAK,SAAShH,MAAK,SAAAC,GACvD,IAAI8L,EAAU9L,EAAIqF,MAClByG,EAAQ3J,IAAMA,EACd,EAAK5B,SAAS,CAAC2B,KAAM4J,OAEzB/M,EAASgD,WAAWC,IAAI,WAAW+E,KAAK,SAAShH,MAAK,SAAAC,GAClD,IAAI8L,EAAU9L,EAAIqF,MAClB,EAAK9E,SAAS,CAAE6C,OAAQ0I,OAE5B/M,EAASgD,WAAWC,IAAI,YAAY+E,KAAK,SAAShH,MAAK,SAAAC,GACnD,IAAI8L,EAAU9L,EAAIqF,MAClB,EAAK9E,SAAS,CAAEyC,QAAS8I,EAASoC,WAAW,OAdlB,2CAAnC,yD,+BA8FA,OACIvN,KAAKf,MAAMsO,UAAY,KACvB,yBAAKxN,UAAU,aACX,4BAAQA,UAAU,WAClB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,YACZ,yBAAKmD,IAAKqN,IAAMxQ,UAAU,WAAWoD,IAAI,SACzC,yBAAKpD,UAAU,SAAf,aAEJ,wBAAIA,UAAU,iBACV,4BAAQA,UAAWC,KAAKf,MAAM0Q,QAAU,WAAa,aAAcjP,QAASV,KAAK+P,aAC7E,yBAAKhQ,UAAU,YAAf,aAGR,wBAAIA,UAAU,iBACV,4BAAQA,UAAWC,KAAKf,MAAM2Q,QAAU,WAAa,aAAclP,QAASV,KAAKgQ,YAC7E,yBAAKjQ,UAAU,YAAf,aAGR,wBAAIA,UAAU,iBACV,4BAAQA,UAAWC,KAAKf,MAAM4Q,QAAU,WAAa,aAAcnP,QAASV,KAAKiQ,aAC7E,yBAAKlQ,UAAU,YAAf,aAGR,wBAAIA,UAAU,iBACV,4BAAQA,UAAWC,KAAKf,MAAM6Q,QAAU,WAAa,aAAcpP,QAASV,KAAKkQ,mBAC7E,yBAAKnQ,UAAU,YAAf,cAGR,wBAAIA,UAAU,iBACV,4BAAQA,UAAWC,KAAKf,MAAMa,QAAU,WAAa,aAAcY,QAASV,KAAKmQ,aAC7E,yBAAKpQ,UAAU,YAAf,cAGR,wBAAIA,UAAU,iBACV,4BAAQA,UAAU,aAAaW,QAASV,KAAKoQ,QACzC,yBAAKrQ,UAAU,YAAf,aAMZ,yBAAKA,UAAU,wBACVC,KAAKf,MAAM0Q,SACR,kBAAC,EAAD,CACIpO,KAAMvB,KAAKf,MAAMsC,KACjBS,QAAShC,KAAKgC,QACdI,YAAapC,KAAKoC,YAClBI,WAAYxC,KAAKwC,WACjBzC,UAAU,cACVsC,QAASrC,KAAKf,MAAMoD,QACpBI,OAAQzC,KAAKf,MAAMwD,SAG1BzC,KAAKf,MAAM2Q,SAAW,kBAAC,EAAD,CAAQ7P,UAAU,gBACxCC,KAAKf,MAAM4Q,SAAW,kBAAC,EAAD,CAAS9P,UAAU,gBACzCC,KAAKf,MAAMa,SAAW,kBAAC,EAAD,CAASyB,KAAMvB,KAAKf,MAAMsC,KAAMxB,UAAU,gBAChEC,KAAKf,MAAM6Q,SAAW,kBAAC,EAAD,CAAS/P,UAAU,uB,GAvKhCY,IAAMC,WCJzB,SAAS4P,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAWhB,EAAMiB,WAAW,IACrD,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW5P,IACnC,kBAAC,IAAD,CAAO2P,KAAK,IAAIG,OAAK,EAACF,UAAW9R,IAEjC,kBAAC,IAAD,CAAO8R,UAAW9R,K,ICRTiS,E,uKAEjB,OACE,kBAAC,IAAD,CAAQ3S,QAASA,GACf,kBAACsS,EAAD,W,GAJyB7P,IAAMC,WCMnBkQ,QACW,cAA7BvR,OAAOC,SAASuR,UAEe,UAA7BxR,OAAOC,SAASuR,UAEhBxR,OAAOC,SAASuR,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpS,MAAK,SAAAqS,GACJA,EAAaC,gBAEdhS,OAAM,SAAAG,GACL+B,QAAQ/B,MAAMA,EAAMC,a,mBEzI5B9B,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.de98529a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4f684e93.svg\";","module.exports = __webpack_public_path__ + \"static/media/kiwi.e6d17f98.png\";","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import * as firebase from 'firebase'\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyAgtOMsgueqoE1acwvIDADQLZDPWYiW7PE\",\r\n    authDomain: \"stinder-3b3b6.firebaseapp.com\",\r\n    databaseURL: \"https://stinder-3b3b6.firebaseio.com\",\r\n    projectId: \"stinder-3b3b6\",\r\n    storageBucket: \"stinder-3b3b6.appspot.com\",\r\n    messagingSenderId: \"274076431598\",\r\n    appId: \"1:274076431598:web:7a3a0b1887c288eb9cefff\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport \"./signIn.css\";\r\nimport firebase from '../../Firebase'\r\n\r\nexport default class SignIn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: ''\r\n        };\r\n    }\r\n\r\n\r\n    login = () => {\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(res => {\r\n            this.props.history.push('/dashboard');\r\n            window.location.reload();\r\n        }).catch(err => this.setState({error: err.message}))\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"SignInContainer\">\r\n                <p>Welcome to KiwiLink</p>\r\n                {this.state.error.length > 0 && <p>{this.state.error}</p>}\r\n                <form className=\"SignInInput\" onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        {/* Email: */}\r\n                        <input type=\"email\" \r\n                            placeholder=\"Email\"\r\n                            value={this.state.email} \r\n                            onChange={event => {\r\n                                this.setState({email: event.target.value});\r\n                            }} \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        {/* Password: */}\r\n                        <input \r\n                            placeholder=\"Password\"\r\n                            type=\"password\" \r\n                            value={this.state.password} \r\n                            onChange={event => {\r\n                                this.setState({password: event.target.value});\r\n                            }}  \r\n                        />\r\n                    </label>\r\n                </form>\r\n                <div className=\"SignInButtonContainer\">\r\n                    <button \r\n                        onClick={this.login}\r\n                        className=\"SignInButton\"\r\n                    >\r\n                        Log in\r\n                    </button>\r\n                    <button \r\n                        className=\"SignInButton\"\r\n                        onClick = {() => {\r\n                            this.props.history.push('/register');\r\n                            window.location.reload();\r\n                        }}\r\n                    >\r\n                        Sign up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../../Firebase'\r\n\r\nlet default_image = \"https://firebasestorage.googleapis.com/v0/b/stinder-3b3b6.appspot.com/o/photos%2Fdefault.png?alt=media&token=df58e5e6-dbce-49fb-9c5d-75028e46138d\"\r\n\r\nexport default class Register extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        error: \"\"\r\n    }\r\n\r\n    register = () => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(this.state.email, this.state.password).then(creds => {\r\n                firebase.database().ref('users/').child(creds.user.uid).set({\r\n                    email: this.state.email,\r\n                    first_name: this.state.first_name,\r\n                    last_name: this.state.last_name,\r\n                    bio: \"\",\r\n                    // first_time: true,\r\n                    image: default_image\r\n                }).then(() => {\r\n                    this.props.history.push('/dashboard');\r\n                    window.location.reload();\r\n                }).catch(error => console.log(error))\r\n            }).catch(err => this.setState({error: err.message}))    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SignInContainer\">\r\n                {/* <header className=\"Header\"></header> */}\r\n                {/* <div className=\"Body\"> */}\r\n                    <p>Register now</p>\r\n                    {this.state.error.length > 0 && <p>{this.state.error}</p>}\r\n                    <form className=\"SignInInput\" onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            <input \r\n                                placeholder=\"First name\"\r\n                                type=\"text\" \r\n                                value={this.state.first_name} \r\n                                onChange={event => this.setState({first_name: event.target.value})}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                placeholder=\"Last name\"\r\n                                type=\"text\" \r\n                                value={this.state.last_name} \r\n                                onChange={event => this.setState({last_name: event.target.value})}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                placeholder=\"Email\"\r\n                                type=\"email\" \r\n                                value={this.state.email} \r\n                                onChange={event => this.setState({email: event.target.value})}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                placeholder=\"Password\"\r\n                                type=\"password\" \r\n                                value={this.state.password} \r\n                                onChange={event => this.setState({password: event.target.value})}\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                    <div className=\"SignInButtonContainer\">\r\n                        <button \r\n                            lassName=\"SignInButton\"\r\n                            onClick={this.register}\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n                        <button     \r\n                            onClick={() => {\r\n                                this.props.history.push('/');\r\n                                window.location.reload();\r\n                            }}\r\n                            className=\"SignInButton\"\r\n                        \r\n                        >\r\n                            Log in\r\n                        </button>\r\n                    </div>\r\n                {/* </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../../../Firebase'\r\nimport VirtualizedSelect from 'react-virtualized-select'\r\nimport \"react-select/dist/react-select.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport createFilterOptions from 'react-select-fast-filter-options';\r\nimport \"./Profile.css\"\r\n\r\n\r\nexport default class Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bio: \"\",\r\n            newBio: \"\",\r\n            courses: [],\r\n            newCourses: [],\r\n            majors: [],\r\n            newMajors: [],\r\n            editBio: false,\r\n            editCourses: false,\r\n            editMajors: false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.setState({ \r\n            bio : this.props.user.bio, \r\n            newBio: this.props.user.bio,\r\n            courses: this.props.user.courses,\r\n            newCourses: this.props.user.courses,\r\n            majors: this.props.user.majors,\r\n            newMajors: this.props.user.majors\r\n        })\r\n    }\r\n\r\n    saveBio = () => {\r\n        this.setState({bio: this.state.newBio});\r\n        // save to firebase and call back?\r\n        firebase.database().ref(`users/${this.props.user.uid}`).update({\r\n            bio: this.state.newBio\r\n        })\r\n        this.props.saveBio(this.state.newBio);\r\n        this.setState({ editBio: false })\r\n    }\r\n\r\n    saveCourses = () => {\r\n        this.setState({courses: this.state.newCourses})\r\n        firebase.database().ref(`users/${this.props.user.uid}`).update({\r\n            courses: this.state.newCourses\r\n        })\r\n        this.props.saveCourses(this.state.newCourses);\r\n        this.setState({ editCourses: false })\r\n    }\r\n\r\n    saveMajors = () => {\r\n        this.setState({majors: this.state.newMajors})\r\n        firebase.database().ref(`users/${this.props.user.uid}`).update({\r\n            majors: this.state.newMajors\r\n        })\r\n        this.props.saveMajors(this.state.newMajors);\r\n        this.setState({ editMajors: false })\r\n    }\r\n\r\n    filter = (items) => {\r\n        let options = items\r\n        return createFilterOptions({ options, labelKey:\"name\", valueKey:\"id\"})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"ProfileContainer\">\r\n                <div>\r\n                    <img \r\n                        className=\"ProfilePicture\"\r\n                        src={this.props.user.image}\r\n                        alt=\"loading\"\r\n                    >\r\n                    </img>\r\n                </div>\r\n                <div className=\"Welcome\">\r\n                    Welcome, {this.props.user.first_name} {this.props.user.last_name}\r\n                </div>\r\n                {\r\n                    this.state.editBio ?\r\n                        <div>\r\n                            <div>\r\n                                <textarea\r\n                                    className=\"Bio-Area\"\r\n                                    value={this.state.newBio}\r\n                                    onChange={event => this.setState({ newBio: event.target.value })}\r\n                                />\r\n                            </div>\r\n                            <button className=\"Edit-Bio\" onClick={this.saveBio}>\r\n                                save\r\n                            </button>\r\n                            <button className=\"Edit-Bio\" onClick={() => this.setState({ editBio: false, newBio: this.state.bio })}>\r\n                                cancel\r\n                            </button>\r\n                        </div>\r\n                    :\r\n                    <div>\r\n                        <div className=\"Bio\">\r\n                            {this.state.bio}\r\n                        </div>\r\n                        <button className=\"Edit-Bio\" onClick={() => this.setState({ editBio: true })}>\r\n                            {this.state.bio.length === 0 ? \"click to add a bio\" : \"click to edit bio\"}\r\n                        </button>\r\n                    </div>\r\n                }\r\n                <div className=\"Line\"></div>\r\n                {\r\n                    this.state.editCourses ?\r\n                        <div>\r\n                            <div>\r\n                                <VirtualizedSelect\r\n                                    labelKey={\"name\"}\r\n                                    valueKey={\"id\"}\r\n                                    options={this.props.courses}\r\n                                    value={this.state.newCourses}\r\n                                    multi={true}\r\n                                    filterOptions={this.filter(this.props.courses)}\r\n                                    className=\"Dropdown\"\r\n                                    onChange={items => {\r\n                                        items = items.map(item => {\r\n                                            return {\r\n                                                name: item.name.split(\":\")[0],\r\n                                                id: item.id\r\n                                            }\r\n                                        })\r\n                                        this.setState({ newCourses: items })\r\n                                    }}\r\n                                    placeholder=\"Search for courses...\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"Edit-Button\" onClick={this.saveCourses}>\r\n                                save\r\n                            </button>\r\n                            <button className=\"Edit-Button\" onClick={() => this.setState({ editCourses: false, newCourses: this.state.courses })}>\r\n                                cancel\r\n                            </button>\r\n                        </div>\r\n                    :\r\n                    <div>\r\n                        <div>\r\n                            <button className=\"Edit-Button\" onClick={() => this.setState({ editCourses: true })}>\r\n                                {this.state.courses && this.state.courses.length === 0 ? \"Click here to add classes\" : \"Classes (click here to edit)\"}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"ItemList\">\r\n                            {\r\n                                this.props.user.courses && this.props.user.courses.map(course => <button className=\"Item\" key={course.id}>{course.name}</button>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.editMajors ?\r\n                        <div>\r\n                            <div>\r\n                                <VirtualizedSelect\r\n                                    labelKey={\"name\"}\r\n                                    valueKey={\"id\"}\r\n                                    options={this.props.majors}\r\n                                    value={this.state.newMajors}\r\n                                    multi={true}\r\n                                    filterOptions={this.filter(this.props.majors)}\r\n                                    className=\"Dropdown\"\r\n                                    onChange={item => this.setState({ newMajors: item })}\r\n                                    placeholder=\"Search for majors...\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"Edit-Button\" onClick={this.saveMajors}>\r\n                                save\r\n                            </button>\r\n                            <button className=\"Edit-Button\" onClick={() => this.setState({ editMajors: false, newMajors: this.state.majors })}>\r\n                                cancel\r\n                            </button>\r\n                        </div>\r\n                    :\r\n                    <div>\r\n                        <div>\r\n                            <button className=\"Edit-Button\" onClick={() => this.setState({ editMajors: true })}>\r\n                                {this.state.majors && this.state.majors.length === 0 ? \"Click here to add majors\" : \"Major(s) (click here to edit)\"}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"ItemList\">\r\n                            {\r\n                                this.props.user.majors && this.props.user.majors.map(major => <button className=\"Item\" key={major.id}>{major.name}</button>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import firebase from './Firebase.js'\r\n\r\nclass Fire {    \r\n    get uid() {\r\n        return (firebase.auth().currentUser || {}).uid;\r\n    }\r\n\r\n    getRoom(room) {\r\n        return firebase.database().ref(`messages/${room}`);\r\n    }\r\n\r\n    get first_name() {\r\n        return (firebase.auth().currentUser || {}).displayName.split(\"@\")[0];\r\n    }\r\n\r\n    get last_name() {\r\n        return (firebase.auth().currentUser || {}).displayName.split(\"@\")[1];\r\n    }\r\n\r\n    async picture(uid) {\r\n        return (await firebase.database().ref(`users/${uid}/image`).once('value')).val()\r\n    }\r\n\r\n    send = (messages, room) => {\r\n        messages.forEach(item => {\r\n            const message = {\r\n                text: item.text,\r\n                timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n                user: item.user,\r\n                sent: true\r\n            }\r\n            this.getRoom(room).child(\"/texts/\").push(message)\r\n        });\r\n    }\r\n\r\n    parse = async (message) => {\r\n        const {user, text, timestamp, sent, system} = message.val();\r\n        const {key: _id} = message;\r\n        const createdAt = new Date(timestamp);\r\n        // user.avatar = await this.picture(user._id)   CAUSES MESSAGES TO BE REVERSED....?\r\n        return {\r\n            _id,\r\n            createdAt,\r\n            text,\r\n            sent,\r\n            user,\r\n            system\r\n        };\r\n    }\r\n\r\n    get = async (callback, room) => {\r\n        this.getRoom(room).child('/texts').on('child_added', async (snapshot) => callback(await this.parse(snapshot)));\r\n    }\r\n\r\n    off(room) {\r\n        this.getRoom(room).child('/texts').off();\r\n    }\r\n\r\n    getReadReceipts = (room, callback) => {\r\n        this.getRoom(room).child(`/members/${this.uid}`).child('last_seen').on('value', async (snapshot) => callback(snapshot));\r\n    }\r\n\r\n    unsubscribeReadReceipts = (room) => {\r\n        this.getRoom(room).child(`/members/${this.uid}`).child('last_seen').off();\r\n    }\r\n\r\n    getGroupChatListener = (add, remove) => {\r\n        firebase.database().ref(`users/${this.uid}/messages`).on('child_added', async (snapshot) => add(snapshot));\r\n        firebase.database().ref(`users/${this.uid}/messages`).on('child_removed', async (snapshot) => remove(snapshot));\r\n    }\r\n\r\n    unsubscribeGroupChatListener = () => {\r\n        firebase.database().ref(`users/${this.uid}/messages`).off();\r\n    }\r\n\r\n    // uploadPhoto = async uri => {\r\n    //     const path = `photos/${this.uid}/profile.jpg`;\r\n\r\n    //     return new Promise(async (res, rej) => {\r\n    //         const response = await fetch(uri);\r\n    //         const file = await response.blob();\r\n\r\n    //         let upload = firebase.storage().ref(path).put(file)\r\n\r\n    //         upload.on(\"state_changed\", snapshot => {}, err => {\r\n    //             rej(err)\r\n    //         },\r\n    //         async () => {\r\n    //             const url = await upload.snapshot.ref.getDownloadURL();\r\n    //             res(url)\r\n    //             Image.prefetch(url)\r\n    //             firebase.database().ref(`/users/${this.uid}`).update({\r\n    //                 image: url\r\n    //             })\r\n    //         })\r\n    //     })\r\n    // }\r\n    \r\n    // cachePhotos = async () => {\r\n    //     firebase.database().ref('/users').on('child_added', async (snapshot) => {\r\n    //         let user = snapshot.val();\r\n    //         Image.prefetch(user.image).catch(e => console.log(e))\r\n    //     })\r\n    // }\r\n\r\n    // unsubscribePhotoCacheListener = () => {\r\n    //     firebase.database().ref('/users').off();\r\n    // }\r\n\r\n    // leaveGroup = (room_id, callback) => {\r\n    //     firebase.database().ref(`users/${this.uid}/messages/${room_id}`).remove().then(() => {\r\n    //         firebase.database().ref(`messages/${room_id}/members/${this.uid}`).update({\r\n    //             active: false\r\n    //         }).then(() => {\r\n    //             callback();\r\n    //         }).catch(err => console.log);\r\n    //     }).catch(err => console.log(err));\r\n    // }\r\n    \r\n    // getCourses = async () => {\r\n    //     let courses;\r\n    //     await firebase.database().ref('courses').once('value')\r\n    //         .then(data => {\r\n    //             let js_data = data.exportVal()\r\n    //             courses = Object.values(js_data)\r\n    //         })\r\n    //     return courses;\r\n    // }\r\n\r\n    // getMajors = async () => {\r\n    //     let majors;\r\n    //     await firebase.database().ref('majors').once('value')\r\n    //         .then(data => {\r\n    //             let js_data = data.exportVal()\r\n    //             majors = Object.values(js_data)\r\n    //         })\r\n    //     return majors;\r\n    // }\r\n\r\n    // get users who are currenly not firends with current user\r\n    // helper function used in getMatches\r\n    getNonRelatedUsers = async (allUsers, currRelated, nonRelatedUsers) => {\r\n        if (\r\n            (currRelated != undefined) && \r\n            (currRelated != null) && \r\n            (currRelated.length != null) &&\r\n            (currRelated.length == 0)\r\n        ) {\r\n            allUsers = allUsers.filter((value) => {return value !== this.uid})\r\n            allUsers.map((user) => nonRelatedUsers.add(user))\r\n        } else {\r\n            // console.log(\"with current related users\")\r\n            allUsers.map((user)=> {\r\n                if (user != this.uid) {\r\n                    // console.log(\"current user\", user)\r\n                    let result = false;\r\n                    currRelated.map((relatedUser) => {\r\n                        if (relatedUser === user) {\r\n                            result = true;\r\n                        }\r\n                    })\r\n                    if (result === false) {\r\n                        nonRelatedUsers.add(user)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // get usrs matched with major/course\r\n    getMatches = async (users, prefEnable) => {\r\n        await firebase.database().ref('/users').once('value')\r\n        .then(userData => {\r\n            let jsUserData = (userData.val() || {}); // val(): convert to json format\r\n            let currFriends = (jsUserData[this.uid].friends || {})\r\n            let currRequested = (jsUserData[this.uid].requestedFriends || {})\r\n            let currRequesting = (jsUserData[this.uid].requestingFriends || {})\r\n            let currRelated = Object.assign(currFriends, currRequested, currRequesting)\r\n            // console.log(\"current related:\", currRelated)\r\n            // set to store the current user's major(s)\r\n            let curr_user_majors = new Set();\r\n            for (let major in jsUserData[this.uid].majors) {\r\n                curr_user_majors.add(jsUserData[this.uid].majors[major].name);\r\n            }\r\n            // set to store current user's courses\r\n            const curr_user_courses = new Set();\r\n            for(let course in jsUserData[this.uid].courses) {\r\n                curr_user_courses.add(jsUserData[this.uid].courses[course].name);\r\n            }\r\n\r\n            // select non friends users\r\n            let nonRelatedUsers = new Set()\r\n            this.getNonRelatedUsers(Object.keys(jsUserData), Object.keys(currRelated), nonRelatedUsers)\r\n            // filter relavent user\r\n\r\n            for (let user of nonRelatedUsers) {\r\n                let relevantUser = false;\r\n                let all_courses = []\r\n                let current_majors = \"\"\r\n                if(prefEnable) {\r\n                    for (let course in jsUserData[user].courses) {\r\n                        if (curr_user_courses.has(jsUserData[user].courses[course].name)) {\r\n                            relevantUser = true;\r\n                        }\r\n                        all_courses.push(jsUserData[user].courses[course].name)\r\n                    }\r\n                    for (let major in jsUserData[user].majors) {\r\n                        if (curr_user_majors.has(jsUserData[user].majors[major].name)) {\r\n                            relevantUser = true;\r\n                        }\r\n                        current_majors = current_majors.concat(jsUserData[user].majors[major].name)\r\n                        current_majors = current_majors.concat(\"\\n\")\r\n                        jsUserData[user].all_majors = current_majors\r\n                    }\r\n                } else {\r\n                    relevantUser = true\r\n                    for (let course in jsUserData[user].courses) {\r\n                        all_courses.push(jsUserData[user].courses[course].name)\r\n                    }\r\n                    for (let major in jsUserData[user].majors) {\r\n                        current_majors = current_majors.concat(jsUserData[user].majors[major].name)\r\n                        current_majors = current_majors.concat(\"\\n\")\r\n                        jsUserData[user].all_majors = current_majors\r\n                    }\r\n                }\r\n                if (relevantUser) {\r\n                    users.push({\r\n                        uid: user,\r\n                        first_name: jsUserData[user].first_name,\r\n                        last_name: jsUserData[user].last_name,\r\n                        bio: jsUserData[user].bio,\r\n                        major: jsUserData[user].all_majors,\r\n                        classes: all_courses,\r\n                        image: jsUserData[user].image\r\n                    });\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    // group_name(others) {\r\n    //     let group_chat_name = \"\";\r\n    //     if (others.length === 1) {\r\n    //         group_chat_name = this.firstName(others[0].name)\r\n    //     } else if (others.length === 2) {\r\n    //         group_chat_name = this.firstName(others[0].name) + \" and \" + this.firstName(others[1].name)\r\n    //     } else if (others.length <= 3) { \r\n    //         for (let i = 0; i < others.length - 1; i++) {\r\n    //             group_chat_name += this.firstName(others[i].name) + \", \"\r\n    //         }\r\n    //         group_chat_name += \"and \" + this.firstName(others[others.length - 1].name)\r\n    //     } else {\r\n    //         for (let i = 0; i < 2; i++) {\r\n    //             group_chat_name += this.firstName(others[i].name) + \", \"\r\n    //         }\r\n    //         group_chat_name += \"and \" + (others.length - 2) + \" others\"\r\n    //     }\r\n    //     return group_chat_name\r\n    // }\r\n\r\n    firstName(full_name) {\r\n        // Assumes that every name's first name is at the front and no one enters\r\n        // the name that has a space at the front\r\n        let space_pos = full_name.search(\" \")\r\n        if (space_pos == -1) {\r\n            // Don't have first name, use full name\r\n            return full_name\r\n        } else {\r\n            return full_name.substring(0, space_pos)\r\n        }\r\n    }\r\n\r\n    getFriendListener = (callback) => {\r\n        firebase.database().ref(`users/${this.uid}/friends`).on('child_added', async (snapshot) => callback(snapshot));\r\n    }\r\n\r\n    unsubscribeFriendListener = () => {\r\n        firebase.database().ref(`users/${this.uid}/friends`).off()\r\n    }\r\n\r\n    // request friends to a user\r\n    requestFriend(uid) {\r\n        // console.log('send friend request to: ', uid, name)\r\n        firebase.database().ref(`/users/${this.uid}/requestedFriends/`).update({[uid]: uid})\r\n        firebase.database().ref(`users/${uid}/requestingFriends/`).update({[this.uid]: this.uid})\r\n    }\r\n\r\n    getRequestListener = (add_callback, remove_callback) => {\r\n        firebase.database().ref(`users/${this.uid}/requestingFriends`).on('child_added', async (snapshot) => add_callback(snapshot));\r\n        firebase.database().ref(`users/${this.uid}/requestingFriends`).on('child_removed', async (snapshot) => remove_callback(snapshot));\r\n    }\r\n\r\n    unsubscribedRequestListener = () => {\r\n        firebase.database().ref(`users/${this.uid}/requestingFriends`).off();\r\n    }\r\n\r\n    getAllReqUsers = async (users) => {\r\n        await firebase.database().ref(`users/`).once('value')\r\n        .then(dataSnapShot => {\r\n                let allUserData = dataSnapShot.val()\r\n                for (let reqUser in allUserData[this.uid].requestingFriends){\r\n                    let major_names = \"\"\r\n                    for (let major in allUserData[reqUser].majors) {\r\n                        major_names = major_names.concat(allUserData[reqUser].majors[major].name)\r\n                        major_names = major_names.concat(\" \")\r\n                    }\r\n                    allUserData[reqUser].allMajors = major_names\r\n                    let course_names = []\r\n                    for (let course in allUserData[reqUser].courses) {\r\n                        course_names.push(allUserData[reqUser].courses[course].name)\r\n                    }\r\n                    users.push({\r\n                        uid: reqUser,\r\n                        first_name: allUserData[reqUser].first_name,\r\n                        last_name: allUserData[reqUser].last_name,\r\n                        bio: allUserData[reqUser].bio,\r\n                        major: allUserData[reqUser].allMajors,\r\n                        classes: course_names,\r\n                        image: allUserData[reqUser].image,\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    getReqUsers = async (users) => {\r\n        await firebase.database().ref(`users/`).once('value')\r\n        .then(dataSnapShot => {\r\n                let allUserData = dataSnapShot.val()\r\n                for (let reqUser in allUserData[this.uid].requestingFriends){\r\n                    let major_names = \"\"\r\n                    for (let major in allUserData[reqUser].majors) {\r\n                        major_names = major_names.concat(allUserData[reqUser].majors[major].name)\r\n                        major_names = major_names.concat(\" \")\r\n                    }\r\n                    allUserData[reqUser].allMajors = major_names\r\n                    let course_names = []\r\n                    for (let course in allUserData[reqUser].courses) {\r\n                        course_names.push(allUserData[reqUser].courses[course].name)\r\n                    }\r\n                    users.push({\r\n                        uid: reqUser,\r\n                        first_name: allUserData[reqUser].first_name,\r\n                        last_name: allUserData[reqUser].last_name,\r\n                        bio: allUserData[reqUser].bio,\r\n                        major: allUserData[reqUser].allMajors,\r\n                        classes: course_names,\r\n                        image: allUserData[reqUser].image,\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    displayRecent(text, createdAt, user, uid) {\r\n        if (text && createdAt) {\r\n            if (user.name === \"System\") {\r\n                return text;\r\n            }\r\n            let result = (user._id === (this.uid) ? \"You\" : this.firstName(user.name)) + \": \"\r\n            // Replace new line characters with spaces\r\n            text = text.replace(/\\n/g, \" \")\r\n            if (text.length < 30) {\r\n                result += text;\r\n            } else {\r\n                result += text.substring(0, 30) + \"...\";\r\n            }\r\n            let date = new Date(createdAt)\r\n            let now = new Date()\r\n            let difference_in_days = (now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24)   // milliseconds * seconds * minutes * hours\r\n            if (difference_in_days < 1) {  // within same day\r\n                let hours = date.getHours();\r\n                let minutes = date.getMinutes();\r\n                let amPm = hours >= 12 ? \"pm\" : \"am\";\r\n                hours %= 12;\r\n                hours = hours !== 0 ? hours : 12;\r\n                minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n                result += \" · \" + hours + \":\" + minutes + \" \" + amPm;\r\n            } else if (difference_in_days < 7) {\r\n                let day = date.toString().split(\" \")[0]\r\n                result += \" · \" + day\r\n            } else {\r\n                let arr =  date.toString().split(\" \")\r\n                let day = arr[1] + + \" \" + arr[2]\r\n                result += \" · \" + day\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    // // helper function: manually add friend request to current user for testing\r\n    // addRequest(uid, name) {\r\n    //     firebase.database().ref(`users/${this.uid}/requestingFriends/`).update({[uid]: name})\r\n    // }\r\n\r\n    // remove a friend request in given user who request friend to current user\r\n    removeRequest(uid) {\r\n        firebase.database().ref(`users/${this.uid}/requestingFriends/${uid}`).remove()\r\n        .then(() => {  \r\n            // console.log('remove user ', uid, name, 'from the requesting list')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n        firebase.database().ref(`users/${uid}/requestedFriends/${this.uid}`).remove()\r\n        .then(() => {\r\n            // console.log('remove current user', this.uid, this.name, 'from the requested list')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // confirm a friend request:\r\n    // 1) add both users to their corresponding friend list\r\n    // 2) remove both users from requested/requesting list\r\n    confirmRequest(uid, first_name, last_name) {\r\n        // create a message room for both people\r\n        firebase.database().ref('/messages').push({ \r\n            texts: [\r\n                {\r\n                    _id: 1,\r\n                    text: 'Say hi to your new friend!',\r\n                    timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n                    user: {\r\n                        _id: 1,\r\n                        name: \"System\"\r\n                    },\r\n                    system: true\r\n                }\r\n            ],\r\n            group_name: \"\"\r\n        }).then(snap => {\r\n            firebase.database().ref(`/messages/${snap.key}/members/`).update({\r\n                [uid]: {\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                    last_seen: null\r\n                },\r\n                [this.uid]: {\r\n                    first_name: `${this.first_name}`,\r\n                    last_name: `${this.last_name}`,\r\n                    last_seen: null\r\n                },\r\n            });\r\n            // add to friends list\r\n            firebase.database().ref(`users/${this.uid}/friends/`).update({\r\n                [uid]: {\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                    room: snap.key,\r\n                }\r\n            })\r\n            .then(() => {\r\n                // console.log('add user', uid, name, 'to', this.name+'\\'s friends list')\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n            // add to friends list\r\n            firebase.database().ref(`users/${uid}/friends/`).update({\r\n                [this.uid]: {\r\n                    first_name: `${this.first_name}`,\r\n                    last_name: `${this.last_name}`,\r\n                    room: snap.key,\r\n                }\r\n            })\r\n            .then(() => {\r\n                // console.log('add current user', this.uid, this.name, 'to', name+'\\'s friends list')\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        })\r\n\r\n        // remove from requested/requesting lists\r\n        firebase.database().ref(`users/${this.uid}/requestingFriends/${uid}`).remove()\r\n        .then(() => {  \r\n            // console.log('remove user ', uid, name, 'from the requesting list')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n        firebase.database().ref(`users/${uid}/requestedFriends/${this.uid}`).remove()\r\n        .then(() => {\r\n            // console.log('remove current user', this.uid, this.name, 'from the requested list')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // removeFriend(uid){\r\n    //     console.log(`remove ${uid} from ${this.uid}'s friends list`)\r\n    //     firebase.database().ref(`users/${this.uid}/friends/${uid}`).remove()\r\n    // }\r\n\r\n    // //|-------- helper functions ---------| \r\n\r\n    // // remove all requested/requesting users\r\n    // removeAllFriends = async () => {\r\n    //     await firebase.database().ref('/users').once('value')\r\n    //     .then(userData => {\r\n    //         let jsUserData = (userData.val() || {})\r\n    //         for (let uid in jsUserData) {\r\n    //             console.log(\"remove requested/requesting user for user:\", uid)\r\n    //             firebase.database().ref(`users/${uid}/requestedFriends`).remove()\r\n    //             firebase.database().ref(`users/${uid}/requestingFriends`).remove()\r\n    //             firebase.database().ref(`users/${uid}/friends`).remove()\r\n    //         }\r\n    //     }).catch((error) => {\r\n    //         console.log(error)\r\n    //     })\r\n    // }\r\n\r\n    \r\n}\r\n\r\nexport default new Fire();","import React from 'react';\r\nimport \"./ForYou.css\"\r\nimport Fire from '../../../Fire'\r\n\r\nexport default class ForYou extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let users = this.state.users\r\n        await Fire.getMatches(users, true);\r\n        this.setState({\r\n            users: users\r\n        }, ()=> {\r\n            console.log(\"matched users: \" + this.state.users)\r\n        })\r\n    }\r\n\r\n    renderClasses = (courses) => {\r\n        let limit = 3\r\n        let arr = []\r\n        if (courses.length > limit) {\r\n            for (let i = 0; i < (limit - 1); i++) {\r\n                arr.push(courses[i]);\r\n            }\r\n            arr.push(\"and more...\");\r\n        } else {\r\n            arr = courses\r\n        }\r\n        if (arr.length == 0) {\r\n            arr.push(\"no classes\")\r\n        }\r\n        return (\r\n            arr.map( item=> {return (<div className=\"RoundBox\"><p className=\"ClassesArray\">{item}</p></div>)})\r\n        )\r\n    }\r\n\r\n    requestFriend = (idx) => {\r\n        let currUser = this.state.users[idx]\r\n        if (currUser.id !== null) {\r\n            Fire.requestFriend(currUser.uid) \r\n        } else {\r\n            console.warn(\"request user id is null\")\r\n        }\r\n        let newUsers = this.state.users\r\n        newUsers.splice(idx, 1)\r\n        this.setState({\r\n            users: newUsers, \r\n        })\r\n    }\r\n\r\n    renderMatches = () => {\r\n        console.log(this.state.users)\r\n        return this.state.users.map((obj, idx) =>{\r\n            console.log(obj.first_name)\r\n            return (\r\n                <div className= {\"ForYouCard\"}>\r\n                    <div className=\"ForYouImgContainer\">\r\n                        <img\r\n                            className=\"ForYouCardImg\"\r\n                            src={obj.image}\r\n                        />\r\n                        <button className=\"ForYouImgBotBar\" onClick={() => this.requestFriend(idx)}>\r\n                            <div>\r\n                                <img\r\n                                    className=\"ForYouRequestButton\"\r\n                                    src={require(\"../assets/star.png\")}\r\n                                />\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"ForYouUserInfoContainer\">\r\n                        <br></br>\r\n                        <div className=\"FullName\">\r\n                            <p>{obj.first_name + \" \" + obj.last_name}</p>\r\n                        </div>\r\n                        <p>{obj.bio}</p>\r\n                        <p className=\"ClassTitle\">classes this quarter:</p>\r\n                        {/* <div className=\"ClassesArray\"> */}\r\n                            {this.renderClasses(obj.classes)}   \r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ForYouContainer\">\r\n                <div className=\"ForYouHeader\">\r\n                    <div className=\"ForYouTitle\">For You Page</div>\r\n                    <p>Scroll through this page (from left to right) to see optimized friend recommendations. \r\n                        Befriend similar people with relevant classes and majors</p>\r\n                </div>\r\n                <section className=\"ForYouCardsContainer\">\r\n                    <div className=\"ForYouPlaceHolder\"></div>\r\n                    {this.renderMatches()}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./ForYou.css\"\r\nimport Fire from '../../../Fire'\r\n\r\nexport default class Explore extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let users = this.state.users\r\n        await Fire.getMatches(users, false);\r\n        this.setState({\r\n            users: users\r\n        }, ()=> {\r\n            console.log(\"matched users: \" + this.state.users)\r\n        })\r\n    }\r\n\r\n    renderClasses = (courses) => {\r\n        let limit = 3\r\n        let arr = []\r\n        if (courses.length > limit) {\r\n            for (let i = 0; i < (limit - 1); i++) {\r\n                arr.push(courses[i]);\r\n            }\r\n            arr.push(\"and more...\");\r\n        } else {\r\n            arr = courses\r\n        }\r\n        if (arr.length == 0) {\r\n            arr.push(\"no classes\")\r\n        }\r\n        return (\r\n            arr.map( item=> {return (<div className=\"RoundBox\"><p className=\"ClassesArray\">{item}</p></div>)})\r\n        )\r\n    }\r\n\r\n    requestFriend = (idx) => {\r\n        let currUser = this.state.users[idx]\r\n        if (currUser.id !== null) {\r\n            Fire.requestFriend(currUser.uid) \r\n        } else {\r\n            console.warn(\"request user id is null\")\r\n        }\r\n        let newUsers = this.state.users\r\n        newUsers.splice(idx, 1)\r\n        this.setState({\r\n            users: newUsers, \r\n        })\r\n    }\r\n\r\n    renderMatches = () => {\r\n        console.log(this.state.users)\r\n        return this.state.users.map((obj, idx) =>{\r\n            console.log(obj.first_name)\r\n            return (\r\n                <div className= {\"ForYouCard\"}>\r\n                    <div className=\"ForYouImgContainer\">\r\n                        <img\r\n                            className=\"ForYouCardImg\"\r\n                            src={obj.image}\r\n                        />\r\n                        <button className=\"ForYouImgBotBar\" onClick={() => this.requestFriend(idx)}>\r\n                            <div>\r\n                                <img\r\n                                    className=\"ForYouRequestButton\"\r\n                                    src={require(\"../assets/star.png\")}\r\n                                />\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"ForYouUserInfoContainer\">\r\n                        <div className=\"FullName\">\r\n                            <p>{obj.first_name + \" \" + obj.last_name}</p>\r\n                        </div>\r\n                        <p>{obj.bio}</p>\r\n                        <p className=\"ClassTitle\">classes this quarter:</p>\r\n                        {/* <div className=\"ClassesArray\"> */}\r\n                            {this.renderClasses(obj.classes)}   \r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ForYouContainer\">\r\n                <div className=\"ForYouHeader\">\r\n                    <div className=\"ForYouTitle\">Explore Page</div>\r\n                    <p>Scroll through this page (from left to right) to see randomized friend recommendations. Befriend random UW students!</p>\r\n                </div>\r\n                <section className=\"ForYouCardsContainer\">\r\n                    <div className=\"ForYouPlaceHolder\"></div>\r\n                    {this.renderMatches()}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../../../Firebase'\r\nimport VirtualizedSelect from 'react-virtualized-select'\r\nimport \"react-select/dist/react-select.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport createFilterOptions from 'react-select-fast-filter-options';\r\n\r\nexport default class CreateGroup extends React.Component {\r\n    state = {\r\n        friends: [],\r\n        selectedUsers: [],\r\n        group_chat_name: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get list of friends\r\n        firebase.database().ref(`users/${this.props.user.uid}/friends`).once('value').then(res => {\r\n            let js_data = res.val();\r\n            let result = []\r\n            for (let uid in js_data) {\r\n                let user = {\r\n                    id: uid,\r\n                    name: js_data[uid].first_name + \" \" + js_data[uid].last_name\r\n                }\r\n                result.push(user);\r\n            }\r\n            this.setState({ friends: result }, () => {\r\n                console.log(this.state.friends)\r\n            })\r\n        })\r\n    }\r\n\r\n    filter = (items) => {\r\n        let options = items\r\n        return createFilterOptions({ options, labelKey:\"name\", valueKey:\"id\"})\r\n    }\r\n\r\n    confirmGroup = () => {\r\n        let group_chat_name = this.state.group_chat_name\r\n        firebase.database().ref('/messages').push({\r\n            group_name: group_chat_name,\r\n            texts:  [\r\n                        {\r\n                            text: this.props.user.first_name + \" has created a new group\",\r\n                            timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n                            system: true,\r\n                            user: {\r\n                                _id: 1,\r\n                                id: 1,\r\n                                name: \"System\"\r\n                            }\r\n                        }\r\n                    ]\r\n        }).then(snap => {\r\n            for (let i = 0; i < this.state.selectedUsers.length; i++) {\r\n                let uid = this.state.selectedUsers[i].id;\r\n                let name = this.state.selectedUsers[i].name\r\n                firebase.database().ref(`/users/${uid}/messages`).update({\r\n                    [snap.key]: snap.key\r\n                });\r\n                firebase.database().ref(`/messages/${snap.key}/members/${uid}`).update({\r\n                    name: name,\r\n                    active: true\r\n                });\r\n            }\r\n            firebase.database().ref(`/users/${this.props.user.uid}/messages`).update({\r\n                [snap.key]: snap.key\r\n            });\r\n            firebase.database().ref(`/messages/${snap.key}/members/${this.props.user.uid}`).update({\r\n                name: this.props.user.first_name + \" \" + this.props.user.last_name,\r\n                active: true\r\n            });\r\n            this.props.cancel();\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        {/* Email: */}\r\n                        <input type=\"text\"\r\n                            className=\"GroupName-Create\"\r\n                            placeholder=\"Group name\"\r\n                            value={this.state.group_chat_name} \r\n                            onChange={event => {\r\n                                this.setState({group_chat_name: event.target.value});\r\n                            }}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <VirtualizedSelect \r\n                            labelKey={\"name\"}\r\n                            valueKey={\"id\"}\r\n                            options={this.state.friends}\r\n                            value={this.state.selectedUsers}\r\n                            multi={true}\r\n                            filterOptions={this.filter(this.state.friends)}\r\n                            className=\"Dropdown\"\r\n                            onChange={items => \r\n                                this.setState({ selectedUsers: items })\r\n                            }\r\n                            placeholder=\"Search for your friends\"\r\n                        />\r\n                    </label>\r\n                    <div className=\"Space-Between\">\r\n                        <button className=\"Create-Button\" onClick={() => this.confirmGroup()}>\r\n                            Confirm\r\n                        </button>\r\n                        <button className=\"Create-Button\" onClick={this.props.cancel}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { GiftedChat } from \"react-web-gifted-chat\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport Fire from '../../../Fire'\r\nimport firebase from '../../../Firebase'\r\nimport CreateGroup from './CreateGroup'\r\nimport \"./Message.css\"\r\n\r\n\r\nexport default class Message extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            displayName: \"\",\r\n            rooms: [],\r\n            room_details: {},\r\n            user_details: {},\r\n            refreshing: false,\r\n            url: null,\r\n            most_recent: \"\",\r\n            isLoading: true,\r\n            focused: false,\r\n            currentRoom: null,\r\n            create: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let user = firebase.auth().currentUser;\r\n        const {email, displayName} = user;\r\n        this.setState({ email, displayName })\r\n        firebase.database().ref(`users/${Fire.uid}/image`).once('value').then(res => {\r\n            // pass to header to use in navigationOptions\r\n            let url = res.val()\r\n            this.setState({ url });\r\n        })\r\n\r\n        this.getRooms();\r\n    }\r\n\r\n    getRooms = () => {\r\n        Fire.getGroupChatListener((room => {\r\n            let room_id = room.val()\r\n            firebase.database().ref(`messages/${room_id}`).once('value').then(res => {\r\n                let temp_rooms = this.state.rooms\r\n                temp_rooms.push(room_id)\r\n                let temp_room_detail = this.state.room_details\r\n                let data_json = res.val();\r\n                data_json.id = room_id;\r\n                data_json.url = require(\"../assets/kiwi.png\")\r\n                data_json.recent = {};\r\n                data_json.messages = ((temp_room_detail[room_id] && temp_room_detail[room_id].messages) || []);\r\n                temp_room_detail[room_id] = data_json;\r\n                this.setState(\r\n                    { \r\n                        rooms: temp_rooms, \r\n                        room_details: temp_room_detail,\r\n                    },\r\n                    () => {\r\n                        this.getListeners(room_id)\r\n                    }\r\n                );\r\n            })\r\n        }), (room => {\r\n            let room_id = room.val()\r\n            Fire.off(room_id)\r\n            Fire.unsubscribeReadReceipts(room_id)\r\n            let temp = this.state.room_details\r\n            delete temp[room_id]\r\n            \r\n            let temp_ids = this.state.rooms\r\n            const index = temp_ids.indexOf(room_id);\r\n            if (index > -1) {\r\n                temp_ids.splice(index, 1);\r\n            }\r\n            this.setState({ rooms: temp_ids, room_details: temp })\r\n        }))\r\n        Fire.getFriendListener(\r\n            (snapShot=>{\r\n                let uid = snapShot.key\r\n                firebase.database().ref(`users/${uid}`).once('value').then(res => \r\n                    {\r\n                        let user = res.val();\r\n                        let major = \"\"\r\n                        let classes = []\r\n                        let newUserDetails = this.state.user_details\r\n                        for (let index in user.majors) {\r\n                            major += user.majors[index].name + \"\\n\"\r\n                        }\r\n                        for (let index in user.courses) {\r\n                            classes.push(user.courses[index].name)\r\n                        }\r\n                        user.courses = classes\r\n                        user.majors = major\r\n                        newUserDetails[`${uid}`] = user\r\n                        this.setState({\r\n                            user_details: newUserDetails\r\n                        })\r\n                    }\r\n                ).catch(e=>{console.log(e)})\r\n                let friend = snapShot.val()\r\n                let newRooms = this.state.rooms\r\n                let room_id = friend.room\r\n                newRooms.push(room_id)\r\n                firebase.database().ref(`messages/${room_id}`).once('value').then(async (res) => {\r\n                    let temp_room_detail = this.state.room_details\r\n                    let data_json = res.val()\r\n                    data_json.id = room_id;\r\n                    data_json.url = await Fire.picture(uid)\r\n                    data_json.group_name = friend.first_name + \" \" + friend.last_name;\r\n                    data_json.recent = {};\r\n                    data_json.messages = ((temp_room_detail[room_id] && temp_room_detail[room_id].messages) || []);\r\n                    data_json.uid = uid;\r\n                    temp_room_detail[room_id] = data_json;\r\n                    this.setState(\r\n                        { \r\n                            rooms: newRooms, \r\n                            room_details: temp_room_detail,\r\n                        },\r\n                        () => {\r\n                            this.getListeners(room_id)\r\n                        }\r\n                    );\r\n                })\r\n\r\n            }),\r\n            (snapShot=>{\r\n                let uid = snapShot.key\r\n                let friend = snapShot.val()\r\n                let room_id = friend.room\r\n                Fire.off(room_id)\r\n                Fire.unsubscribeReadReceipts(room_id)\r\n                let temp = this.state.room_details\r\n                delete temp[room_id]\r\n                \r\n                let temp_ids = this.state.rooms\r\n                const index = temp_ids.indexOf(room_id);\r\n                if (index > -1) {\r\n                    temp_ids.splice(index, 1);\r\n                }\r\n                this.setState({ rooms: temp_ids, room_details: temp })\r\n            })\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeListeners()\r\n    }\r\n\r\n    getListeners = (id) => {\r\n        Fire.get((message => {\r\n            let temp = this.state.room_details;\r\n            if (temp[id]) {\r\n                if (!temp[id].recent.createdAt || temp[id].recent.createdAt < message.createdAt) {\r\n                    temp[id].recent = message\r\n                }\r\n                temp[id].messages = GiftedChat.append(temp[id].messages, message).sort((a, b) => b.createdAt - a.createdAt)\r\n                this.setState({ room_details: temp })\r\n            }\r\n        }), id);\r\n        Fire.getReadReceipts(id, (snap => {\r\n            let temp = this.state.room_details;\r\n            if (temp[id]) {\r\n                temp[id].members[this.props.user.uid].last_seen = snap.val()\r\n                this.setState({ room_details: temp })   \r\n            } \r\n        }))      \r\n    }\r\n\r\n    unsubscribeListeners = () => {\r\n        for (let i = 0; i < this.state.rooms.length; i++) {\r\n            Fire.off(this.state.rooms[i]);\r\n            Fire.unsubscribeReadReceipts(this.state.rooms[i]);\r\n        }\r\n    }\r\n\r\n    compare = (first, second) => {\r\n        if (first.recent.createdAt < second.recent.createdAt) {\r\n            return 1;\r\n        } else if (first.recent.createdAt > second.recent.createdAt) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    cancelCreateGroup = () => {\r\n        this.setState({ create: false })\r\n    }\r\n\r\n    renderChat() {\r\n        const {currentRoom, create} = this.state\r\n        if (create) {\r\n            return <CreateGroup user={this.props.user} cancel={this.cancelCreateGroup} />\r\n        }\r\n        if (currentRoom) \r\n            return (\r\n                <GiftedChat\r\n                    showUserAvatar={true}\r\n                    user={{\r\n                        _id: this.props.user.uid,\r\n                        id: this.props.user.uid, \r\n                        name: (this.props.user.first_name + \" \" + this.props.user.last_name), \r\n                        avatar: this.props.user.image\r\n                    }}\r\n                    messages={this.state.room_details[`${currentRoom}`].messages}\r\n                    onSend={(messages)=> Fire.send(messages, currentRoom)}\r\n                />\r\n            );\r\n    }\r\n\r\n    renderChatRooms() {\r\n        return (\r\n            <div \r\n                style={styles.convoList}\r\n            >\r\n                <div className=\"Align\">\r\n                    <img src={this.props.user.image} className=\"You\"/>\r\n                    <div className=\"Message-Header\">\r\n                        Convos\r\n                    </div>\r\n                </div>\r\n                <button className=\"Create\" onClick={() => this.setState({ create: true })}>\r\n                    Create new group +\r\n                </button>\r\n                {\r\n                    Object.values(this.state.room_details).sort((a,b) => this.compare(a,b))\r\n                    .map(item => {\r\n                        return (\r\n                            <button\r\n                                className=\"Convos\"\r\n                                type=\"button\"    \r\n                                onClick={()=>{\r\n                                    if (this.state.currentRoom) {\r\n                                        // post time stamp\r\n                                        firebase.database().ref(`messages/${this.state.currentRoom}/members/${this.props.user.uid}`).update({\r\n                                            last_seen: firebase.database.ServerValue.TIMESTAMP\r\n                                        })\r\n                                    }\r\n                                    this.setState({\r\n                                        currentRoom: item.id,\r\n                                        create: false\r\n                                    })\r\n                                }}\r\n                            >   \r\n                                <img src={item.url} className=\"Avatar\"/>\r\n                                <div>\r\n                                    <div className=\"GroupName\">\r\n                                        {item.group_name}\r\n                                    </div>\r\n                                    <div className={this.state.currentRoom === item.id ? \r\n                                        \"read\" : item.members[this.props.user.uid].last_seen < item.recent.createdAt ? \r\n                                        \"Unread\" : \"read\"}\r\n                                    >\r\n                                        {\r\n                                            !item.recent.user ? \r\n                                                null \r\n                                            : \r\n                                            Fire.displayRecent(item.recent.text, item.recent.createdAt, item.recent.user, this.props.user.uid)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderClasses = (courses) => {\r\n        let limit = 3\r\n        let arr = []\r\n        if (courses.length > limit) {\r\n            for (let i = 0; i < (limit - 1); i++) {\r\n                arr.push(courses[i]);\r\n            }\r\n            arr.push(\"and more...\");\r\n        } else {\r\n            arr = courses\r\n        }\r\n        return (\r\n            arr.map( item=> {return (<div className=\"RoundBox\"><p className=\"ClassesArray\">{item}</p></div>)})\r\n        )\r\n    }\r\n\r\n    renderSetting() {\r\n        if (this.state.currentRoom && this.state.room_details[`${this.state.currentRoom}`].uid) {\r\n            let uid = this.state.room_details[`${this.state.currentRoom}`].uid\r\n            let user = this.state.user_details[uid]\r\n            \r\n            console.log(\"obj:\", user)\r\n            return (\r\n                <div className= {\"ForYouCard\"}>\r\n                    <div className=\"ForYouImgContainer\">\r\n                        <img\r\n                            className=\"ForYouCardImg\"\r\n                            src={user.image}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ForYouUserInfoContainer\">\r\n                        <p>{user.first_name} {user.first_name}</p>\r\n                        {/* <p>{obj.majors}</p> */}\r\n                        <p>{user.bio}</p>\r\n                        <p>classes this quarter:</p>\r\n                        {this.renderClasses(user.courses)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            // return \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.container}>\r\n                {/* {this.renderPopup()} */}\r\n                <div style={styles.channelList}>{this.renderChatRooms()}</div>\r\n                <div style={styles.chat}>{this.renderChat()}</div>\r\n                <div style={styles.settings}>{this.renderSetting()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"100vh\",\r\n    },\r\n    channelList: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n    },\r\n    chat: {\r\n        display: \"flex\",\r\n        flex: 3,\r\n        flexDirection: \"column\",\r\n        borderWidth: \"1px\",\r\n        borderColor: \"#ccc\",\r\n        borderRightStyle: \"solid\",\r\n        borderLeftStyle: \"solid\",\r\n    },\r\n    settings: {\r\n        display: \"flex\",\r\n        flex: 2,\r\n        flexDirection: \"column\",\r\n    },\r\n    convoList: {\r\n        flex:1, \r\n        display: \"flex\", \r\n        flexDirection: 'column',\r\n    }\r\n};","import React from 'react';\r\nimport \"./Request.css\"\r\nimport Fire from '../../../Fire'\r\n\r\nexport default class Request extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let users = this.state.users\r\n        await Fire.getAllReqUsers(users)\r\n        this.setState({reqUsers: users})\r\n        Fire.getRequestListener(\r\n            (async userSnapShot => {\r\n                let uid = userSnapShot.val()\r\n                let users = this.state.users\r\n                let exist = users.some(user => user.uid == uid)\r\n                if (!exist) {\r\n                    await Fire.getReqUser(users, uid)\r\n                    this.setState({users: users})\r\n                }\r\n            }),\r\n            (userSnapShot => {\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    removeRequest = (idx) => {\r\n        let reqUser = this.state.users[idx]\r\n        if (reqUser.uid){\r\n            Fire.removeRequest(this.state.reqUsers[idx].uid)\r\n        }\r\n        // if the card handled is the last one request, rerender screen\r\n        let newReqUsers = this.state.users\r\n        newReqUsers.splice(idx, 1)\r\n        this.setState({\r\n            reqUsers: newReqUsers, \r\n        })\r\n    }\r\n\r\n    confirmRequest = (idx) => {\r\n        let reqUser = this.state.users[idx]\r\n        if (reqUser.uid) {\r\n            Fire.confirmRequest(reqUser.uid, reqUser.first_name, reqUser.last_name)\r\n        } else {\r\n            console.warn(\"confirm user id is null\")\r\n        }\r\n        let newReqUsers = this.state.users\r\n        newReqUsers.splice(idx, 1)\r\n        this.setState({\r\n            reqUsers: newReqUsers, \r\n        })\r\n    }\r\n\r\n    renderClasses = (courses) => {\r\n        let limit = 2\r\n        let arr = []\r\n        if (courses.length > limit) {\r\n            for (let i = 0; i < (limit - 1); i++) {\r\n                arr.push(courses[i]);\r\n            }\r\n            arr.push(\"and more...\");\r\n        } else {\r\n            arr = courses\r\n        }\r\n        return (\r\n            arr.map( item=> {return (<div className=\"RoundBox\"><p className=\"ClassesArray\">{item}</p></div>)})\r\n        )\r\n    }\r\n\r\n\r\n    renderRequests = () => {\r\n        console.log(this.state.users)\r\n        return this.state.users.map((obj, idx) =>{\r\n            console.log(obj.first_name)\r\n            return (\r\n                <div className=\"RequestContainer\">\r\n                    <div className= {\"RequestCard\"}>\r\n                        <div className=\"RequestImgContainer\">\r\n                            <img\r\n                                className=\"RequestCardImg\"\r\n                                src={obj.image}\r\n                            />\r\n                            <button className=\"ForYouImgBotBar\" onClick={() => this.requestFriend(idx)}>\r\n                                <div>\r\n                                    <img\r\n                                        className=\"ForYouRequestButton\"\r\n                                        src={require(\"../assets/star.png\")}\r\n                                    />\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"ForYouUserInfoContainer\">\r\n                            <div className=\"FullName\">\r\n                                <p>{obj.first_name + \" \" + obj.last_name}</p>\r\n                            </div>\r\n                            <p>{obj.bio}</p>\r\n                            <p className=\"ClassTitle\">classes this quarter:</p>\r\n                            {/* <div className=\"ClassesArray\"> */}\r\n                                {this.renderClasses(obj.classes)}   \r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"RequestButtonContainer\">\r\n                        <button \r\n                            className=\"AcceptButton\"\r\n                            onClick={()=>{\r\n                                this.confirmRequest(idx)\r\n                            }}\r\n                        >\r\n                            Accept\r\n                        </button>\r\n                        <button \r\n                            className=\"DeclineButton\"\r\n                            onClick={()=>{\r\n                                this.removeRequest(idx)\r\n                            }}\r\n                        >\r\n                            Decline\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ForYouContainer\">\r\n                <div className=\"ForYouHeader\">\r\n                    <div className=\"ForYouTitle\">Friend Requests</div>\r\n                    <p>Scroll through this page to accept or decline friend requests from different users.</p>\r\n                </div>\r\n                <section className=\"ForYouCardsContainer\">\r\n                    {this.renderRequests()}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../../Firebase'\r\n\r\nimport \"./index.css\"\r\nimport logo from '../../logo.svg'\r\nimport Profile from './components/Profile'\r\nimport ForYou from './components/ForYou';\r\nimport Explore from './components/Explore';\r\nimport Message from './components/Message';\r\nimport Request from './components/Request'\r\n\r\nexport default class Main extends React.Component {\r\n    state = {\r\n        user: {},\r\n        isLoading: true,\r\n        profile: true,\r\n        for_you: false,\r\n        explore: false,\r\n        message: false,\r\n        request: false,\r\n        courses: [],\r\n        majors: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            let uid = user.uid\r\n            console.log(uid)\r\n            firebase.database().ref(`users/${uid}`).once('value').then(res => {\r\n                let js_data = res.val()\r\n                js_data.uid = uid;\r\n                this.setState({user: js_data})\r\n            })\r\n            firebase.database().ref(\"majors/\").once('value').then(res => {\r\n                let js_data = res.val()\r\n                this.setState({ majors: js_data })\r\n            })\r\n            firebase.database().ref(\"courses/\").once('value').then(res => {\r\n                let js_data = res.val()\r\n                this.setState({ courses: js_data, isLoading: false })\r\n            })\r\n        });\r\n    }\r\n\r\n    goToProfile = () => {\r\n        this.setState({\r\n            profile: true,\r\n            for_you: false,\r\n            explore: false,\r\n            request: false,\r\n            message: false\r\n        })\r\n    }\r\n\r\n    goToForYou = () => {\r\n        this.setState({\r\n            profile: false,\r\n            for_you: true,\r\n            explore: false,\r\n            request: false,\r\n            message: false\r\n        })\r\n    }\r\n\r\n    goToExplore = () => {\r\n        this.setState({\r\n            profile: false,\r\n            for_you: false,\r\n            explore: true,\r\n            request: false,\r\n            message: false\r\n        })\r\n    }\r\n\r\n    goToFriendRequest = () => {\r\n        this.setState({\r\n            profile: false,\r\n            for_you: false,\r\n            explore: false,\r\n            request: true,\r\n            message: false\r\n        })\r\n    }\r\n\r\n    goToMessage = () => {\r\n        this.setState({\r\n            profile: false,\r\n            for_you: false,\r\n            explore: false,\r\n            request: false,\r\n            message: true\r\n        })\r\n    }\r\n\r\n    saveBio = (bio) => {\r\n        let temp = this.state.user;\r\n        temp.bio = bio;\r\n        this.setState({ user: temp });\r\n    }\r\n\r\n    saveCourses = (courses) => {\r\n        let temp = this.state.user;\r\n        temp.courses = courses;\r\n        this.setState({ user: temp });\r\n    }\r\n\r\n    saveMajors = (majors) => {\r\n        let temp = this.state.user;\r\n        temp.majors = majors;\r\n        this.setState({ user: temp });\r\n    }\r\n\r\n    logOut = () => {\r\n        firebase.auth().signOut();\r\n        this.props.history.push(\"/\");\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoading ? null :\r\n            <div className=\"Container\">\r\n                <header className=\"Header\"></header>\r\n                <div className=\"Body\">\r\n                    <nav className=\"MainNavBar\">\r\n                        <span className=\"Top-left\">\r\n                            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                            <div className=\"Title\">KiwiLink</div>\r\n                        </span>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className={this.state.profile ? \"Selected\" : \"Nav-Button\"} onClick={this.goToProfile}>\r\n                                <div className=\"Nav-Text\">Profile</div>\r\n                            </button>\r\n                        </ul>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className={this.state.for_you ? \"Selected\" : \"Nav-Button\"} onClick={this.goToForYou}>\r\n                                <div className=\"Nav-Text\">For You</div>\r\n                            </button>\r\n                        </ul>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className={this.state.explore ? \"Selected\" : \"Nav-Button\"} onClick={this.goToExplore}>\r\n                                <div className=\"Nav-Text\">Explore</div>\r\n                            </button>\r\n                        </ul>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className={this.state.request ? \"Selected\" : \"Nav-Button\"} onClick={this.goToFriendRequest}>\r\n                                <div className=\"Nav-Text\">Requests</div>\r\n                            </button>\r\n                        </ul>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className={this.state.message ? \"Selected\" : \"Nav-Button\"} onClick={this.goToMessage}>\r\n                                <div className=\"Nav-Text\">Messages</div>\r\n                            </button>\r\n                        </ul>\r\n                        <ul className=\"MainNavButton\">\r\n                            <button className=\"Nav-Button\" onClick={this.logOut}>\r\n                                <div className=\"Nav-Text\">Logout</div>\r\n                            </button>\r\n                        </ul> \r\n                    </nav>\r\n                    \r\n                    {/* Inside here we conditionally render different components*/}\r\n                    <div className=\"MainContentContainer\">\r\n                        {this.state.profile && \r\n                            <Profile \r\n                                user={this.state.user} \r\n                                saveBio={this.saveBio}\r\n                                saveCourses={this.saveCourses}\r\n                                saveMajors={this.saveMajors}\r\n                                className=\"MainContent\"\r\n                                courses={this.state.courses}\r\n                                majors={this.state.majors}\r\n                            />\r\n                        }\r\n                        {this.state.for_you && <ForYou className=\"MainContent\"></ForYou>}\r\n                        {this.state.explore && <Explore className=\"MainContent\"></Explore>}\r\n                        {this.state.message && <Message user={this.state.user} className=\"MainContent\"></Message>}\r\n                        {this.state.request && <Request className=\"MainContent\"></Request>} \r\n                    </div>\r\n                    {/* <p>This is Main page</p> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SignIn from '../pages/SignIn';\r\nimport Register from '../pages/Register';\r\nimport Main from '../pages/Main';\r\n\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/dashboard\" component={Main} isPrivate={true} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/\" exact component={SignIn} />\r\n            {/* redirect user to SignIn page if route does not exist and user is not authenticated */}\r\n            <Route component={SignIn} />\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './services/history';\r\nimport Routes from './routes';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <Routes />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/star.54fe209c.png\";"],"sourceRoot":""}